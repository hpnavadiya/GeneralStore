{"ast":null,"code":"import _defineProperty from \"D:/Projects/React/Portfolio/GeneralStore/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { FormItemInputContext } from '../form/context';\nimport { cloneElement } from '../_util/reactNode';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nvar ClearableInputType = ['text', 'input'];\nfunction hasAddon(props) {\n  return !!(props.addonBefore || props.addonAfter);\n}\nvar ClearableLabeledInput = /*#__PURE__*/function (_React$Component) {\n  _inherits(ClearableLabeledInput, _React$Component);\n  var _super = _createSuper(ClearableLabeledInput);\n  function ClearableLabeledInput() {\n    _classCallCheck(this, ClearableLabeledInput);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ClearableLabeledInput, [{\n    key: \"renderClearIcon\",\n    value: function renderClearIcon(prefixCls) {\n      var _classNames;\n      var _this$props = this.props,\n        value = _this$props.value,\n        disabled = _this$props.disabled,\n        readOnly = _this$props.readOnly,\n        handleReset = _this$props.handleReset,\n        suffix = _this$props.suffix;\n      var needClear = !disabled && !readOnly && value;\n      var className = \"\".concat(prefixCls, \"-clear-icon\");\n      return /*#__PURE__*/React.createElement(CloseCircleFilled, {\n        onClick: handleReset,\n        // Do not trigger onBlur when clear input\n        // https://github.com/ant-design/ant-design/issues/31200\n        onMouseDown: function onMouseDown(e) {\n          return e.preventDefault();\n        },\n        className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(className, \"-hidden\"), !needClear), _defineProperty(_classNames, \"\".concat(className, \"-has-suffix\"), !!suffix), _classNames), className),\n        role: \"button\"\n      });\n    }\n  }, {\n    key: \"renderTextAreaWithClearIcon\",\n    value: function renderTextAreaWithClearIcon(prefixCls, element, statusContext) {\n      var _classNames2;\n      var _this$props2 = this.props,\n        value = _this$props2.value,\n        allowClear = _this$props2.allowClear,\n        className = _this$props2.className,\n        style = _this$props2.style,\n        direction = _this$props2.direction,\n        bordered = _this$props2.bordered,\n        hidden = _this$props2.hidden,\n        customStatus = _this$props2.status,\n        hashId = _this$props2.hashId;\n      var contextStatus = statusContext.status,\n        hasFeedback = statusContext.hasFeedback;\n      if (!allowClear) {\n        return cloneElement(element, {\n          value: value\n        });\n      }\n      var affixWrapperCls = classNames(\"\".concat(prefixCls, \"-affix-wrapper\"), \"\".concat(prefixCls, \"-affix-wrapper-textarea-with-clear-btn\"), getStatusClassNames(\"\".concat(prefixCls, \"-affix-wrapper\"), getMergedStatus(contextStatus, customStatus), hasFeedback), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-rtl\"), direction === 'rtl'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-borderless\"), !bordered), _defineProperty(_classNames2, \"\".concat(className), !hasAddon(this.props) && className), _classNames2), hashId);\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: affixWrapperCls,\n        style: style,\n        hidden: hidden\n      }, cloneElement(element, {\n        style: null,\n        value: value\n      }), this.renderClearIcon(prefixCls));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      return /*#__PURE__*/React.createElement(FormItemInputContext.Consumer, null, function (statusContext) {\n        var _this$props3 = _this.props,\n          prefixCls = _this$props3.prefixCls,\n          inputType = _this$props3.inputType,\n          element = _this$props3.element;\n        if (inputType === ClearableInputType[0]) {\n          return _this.renderTextAreaWithClearIcon(prefixCls, element, statusContext);\n        }\n      });\n    }\n  }]);\n  return ClearableLabeledInput;\n}(React.Component);\nexport default ClearableLabeledInput;","map":{"version":3,"names":["_classCallCheck","_createClass","_inherits","_createSuper","CloseCircleFilled","classNames","React","FormItemInputContext","cloneElement","getMergedStatus","getStatusClassNames","ClearableInputType","hasAddon","props","addonBefore","addonAfter","ClearableLabeledInput","_React$Component","_super","apply","arguments","key","value","renderClearIcon","prefixCls","disabled","readOnly","handleReset","suffix","needClear","className","createElement","onClick","onMouseDown","e","preventDefault","role","renderTextAreaWithClearIcon","element","statusContext","allowClear","style","direction","bordered","hidden","customStatus","status","hashId","contextStatus","hasFeedback","affixWrapperCls","render","Consumer","inputType","Component"],"sources":["D:/Projects/React/Portfolio/GeneralStore/client/node_modules/antd/es/input/ClearableLabeledInput.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { FormItemInputContext } from '../form/context';\nimport { cloneElement } from '../_util/reactNode';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nconst ClearableInputType = ['text', 'input'];\nfunction hasAddon(props) {\n  return !!(props.addonBefore || props.addonAfter);\n}\nlet ClearableLabeledInput = /*#__PURE__*/function (_React$Component) {\n  _inherits(ClearableLabeledInput, _React$Component);\n  var _super = _createSuper(ClearableLabeledInput);\n  function ClearableLabeledInput() {\n    _classCallCheck(this, ClearableLabeledInput);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ClearableLabeledInput, [{\n    key: \"renderClearIcon\",\n    value: function renderClearIcon(prefixCls) {\n      const {\n        value,\n        disabled,\n        readOnly,\n        handleReset,\n        suffix\n      } = this.props;\n      const needClear = !disabled && !readOnly && value;\n      const className = `${prefixCls}-clear-icon`;\n      return /*#__PURE__*/React.createElement(CloseCircleFilled, {\n        onClick: handleReset,\n        // Do not trigger onBlur when clear input\n        // https://github.com/ant-design/ant-design/issues/31200\n        onMouseDown: e => e.preventDefault(),\n        className: classNames({\n          [`${className}-hidden`]: !needClear,\n          [`${className}-has-suffix`]: !!suffix\n        }, className),\n        role: \"button\"\n      });\n    }\n  }, {\n    key: \"renderTextAreaWithClearIcon\",\n    value: function renderTextAreaWithClearIcon(prefixCls, element, statusContext) {\n      const {\n        value,\n        allowClear,\n        className,\n        style,\n        direction,\n        bordered,\n        hidden,\n        status: customStatus,\n        hashId\n      } = this.props;\n      const {\n        status: contextStatus,\n        hasFeedback\n      } = statusContext;\n      if (!allowClear) {\n        return cloneElement(element, {\n          value\n        });\n      }\n      const affixWrapperCls = classNames(`${prefixCls}-affix-wrapper`, `${prefixCls}-affix-wrapper-textarea-with-clear-btn`, getStatusClassNames(`${prefixCls}-affix-wrapper`, getMergedStatus(contextStatus, customStatus), hasFeedback), {\n        [`${prefixCls}-affix-wrapper-rtl`]: direction === 'rtl',\n        [`${prefixCls}-affix-wrapper-borderless`]: !bordered,\n        // className will go to addon wrapper\n        [`${className}`]: !hasAddon(this.props) && className\n      }, hashId);\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: affixWrapperCls,\n        style: style,\n        hidden: hidden\n      }, cloneElement(element, {\n        style: null,\n        value\n      }), this.renderClearIcon(prefixCls));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(FormItemInputContext.Consumer, null, statusContext => {\n        const {\n          prefixCls,\n          inputType,\n          element\n        } = this.props;\n        if (inputType === ClearableInputType[0]) {\n          return this.renderTextAreaWithClearIcon(prefixCls, element, statusContext);\n        }\n      });\n    }\n  }]);\n  return ClearableLabeledInput;\n}(React.Component);\nexport default ClearableLabeledInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}