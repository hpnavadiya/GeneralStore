{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nvar Paragraph = function Paragraph(props) {\n  var getWidth = function getWidth(index) {\n    var width = props.width,\n      _props$rows = props.rows,\n      rows = _props$rows === void 0 ? 2 : _props$rows;\n    if (Array.isArray(width)) {\n      return width[index];\n    }\n    // last paragraph\n    if (rows - 1 === index) {\n      return width;\n    }\n    return undefined;\n  };\n  var prefixCls = props.prefixCls,\n    className = props.className,\n    style = props.style,\n    rows = props.rows;\n  var rowList = _toConsumableArray(Array(rows)).map(function (_, index) {\n    return /*#__PURE__*/(\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(\"li\", {\n        key: index,\n        style: {\n          width: getWidth(index)\n        }\n      })\n    );\n  });\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames(prefixCls, className),\n    style: style\n  }, rowList);\n};\nexport default Paragraph;","map":{"version":3,"names":["_toConsumableArray","classNames","React","Paragraph","props","getWidth","index","width","rows","Array","isArray","undefined","prefixCls","className","style","rowList","map","_","createElement","key"],"sources":["D:/Projects/React/Portfolio/GeneralStore/client/node_modules/antd/es/skeleton/Paragraph.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nconst Paragraph = props => {\n  const getWidth = index => {\n    const {\n      width,\n      rows = 2\n    } = props;\n    if (Array.isArray(width)) {\n      return width[index];\n    }\n    // last paragraph\n    if (rows - 1 === index) {\n      return width;\n    }\n    return undefined;\n  };\n  const {\n    prefixCls,\n    className,\n    style,\n    rows\n  } = props;\n  const rowList = _toConsumableArray(Array(rows)).map((_, index) =>\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-array-index-key\n  React.createElement(\"li\", {\n    key: index,\n    style: {\n      width: getWidth(index)\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames(prefixCls, className),\n    style: style\n  }, rowList);\n};\nexport default Paragraph;"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,8CAA8C;AAC7E,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAGC,KAAK,EAAI;EACzB,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAGC,KAAK,EAAI;IACxB,IACEC,KAAK,GAEHH,KAAK,CAFPG,KAAK;MAAA,cAEHH,KAAK,CADPI,IAAI;MAAJA,IAAI,4BAAG,CAAC;IAEV,IAAIC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAE;MACxB,OAAOA,KAAK,CAACD,KAAK,CAAC;IACrB;IACA;IACA,IAAIE,IAAI,GAAG,CAAC,KAAKF,KAAK,EAAE;MACtB,OAAOC,KAAK;IACd;IACA,OAAOI,SAAS;EAClB,CAAC;EACD,IACEC,SAAS,GAIPR,KAAK,CAJPQ,SAAS;IACTC,SAAS,GAGPT,KAAK,CAHPS,SAAS;IACTC,KAAK,GAEHV,KAAK,CAFPU,KAAK;IACLN,IAAI,GACFJ,KAAK,CADPI,IAAI;EAEN,IAAMO,OAAO,GAAGf,kBAAkB,CAACS,KAAK,CAACD,IAAI,CAAC,CAAC,CAACQ,GAAG,CAAC,UAACC,CAAC,EAAEX,KAAK;IAAA,OAC7D;MACA;MACAJ,KAAK,CAACgB,aAAa,CAAC,IAAI,EAAE;QACxBC,GAAG,EAAEb,KAAK;QACVQ,KAAK,EAAE;UACLP,KAAK,EAAEF,QAAQ,CAACC,KAAK;QACvB;MACF,CAAC;IAAC;EAAA,EAAC;EACH,OAAO,aAAaJ,KAAK,CAACgB,aAAa,CAAC,IAAI,EAAE;IAC5CL,SAAS,EAAEZ,UAAU,CAACW,SAAS,EAAEC,SAAS,CAAC;IAC3CC,KAAK,EAAEA;EACT,CAAC,EAAEC,OAAO,CAAC;AACb,CAAC;AACD,eAAeZ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}