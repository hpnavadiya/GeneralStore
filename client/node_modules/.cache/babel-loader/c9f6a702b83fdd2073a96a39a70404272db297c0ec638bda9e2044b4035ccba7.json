{"ast":null,"code":"import _defineProperty from \"D:/Projects/React/Portfolio/GeneralStore/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nvar skeletonClsLoading = new Keyframes(\"ant-skeleton-loading\", {\n  '0%': {\n    transform: 'translateX(-37.5%)'\n  },\n  '100%': {\n    transform: 'translateX(37.5%)'\n  }\n});\nvar genSkeletonElementCommonSize = function genSkeletonElementCommonSize(size) {\n  return {\n    height: size,\n    lineHeight: \"\".concat(size, \"px\")\n  };\n};\nvar genSkeletonElementAvatarSize = function genSkeletonElementAvatarSize(size) {\n  return Object.assign({\n    width: size\n  }, genSkeletonElementCommonSize(size));\n};\nvar genSkeletonColor = function genSkeletonColor(token) {\n  return {\n    position: 'relative',\n    // fix https://github.com/ant-design/ant-design/issues/36444\n    // https://monshin.github.io/202109/css/safari-border-radius-overflow-hidden/\n    /* stylelint-disable-next-line property-no-vendor-prefix,value-no-vendor-prefix */\n    zIndex: 0,\n    overflow: 'hidden',\n    background: 'transparent',\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      insetInlineEnd: '-150%',\n      bottom: 0,\n      insetInlineStart: '-150%',\n      background: token.skeletonLoadingBackground,\n      animationName: skeletonClsLoading,\n      animationDuration: token.skeletonLoadingMotionDuration,\n      animationTimingFunction: 'ease',\n      animationIterationCount: 'infinite',\n      content: '\"\"'\n    }\n  };\n};\nvar genSkeletonElementInputSize = function genSkeletonElementInputSize(size) {\n  return Object.assign({\n    width: size * 5,\n    minWidth: size * 5\n  }, genSkeletonElementCommonSize(size));\n};\nvar genSkeletonElementAvatar = function genSkeletonElementAvatar(token) {\n  var _ref;\n  var skeletonAvatarCls = token.skeletonAvatarCls,\n    color = token.color,\n    controlHeight = token.controlHeight,\n    controlHeightLG = token.controlHeightLG,\n    controlHeightSM = token.controlHeightSM;\n  return _ref = {}, _defineProperty(_ref, \"\".concat(skeletonAvatarCls), Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: color\n  }, genSkeletonElementAvatarSize(controlHeight))), _defineProperty(_ref, \"\".concat(skeletonAvatarCls).concat(skeletonAvatarCls, \"-circle\"), {\n    borderRadius: '50%'\n  }), _defineProperty(_ref, \"\".concat(skeletonAvatarCls).concat(skeletonAvatarCls, \"-lg\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG))), _defineProperty(_ref, \"\".concat(skeletonAvatarCls).concat(skeletonAvatarCls, \"-sm\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))), _ref;\n};\nvar genSkeletonElementInput = function genSkeletonElementInput(token) {\n  var _ref2;\n  var controlHeight = token.controlHeight,\n    borderRadiusSM = token.borderRadiusSM,\n    skeletonInputCls = token.skeletonInputCls,\n    controlHeightLG = token.controlHeightLG,\n    controlHeightSM = token.controlHeightSM,\n    color = token.color;\n  return _ref2 = {}, _defineProperty(_ref2, \"\".concat(skeletonInputCls), Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: color,\n    borderRadius: borderRadiusSM\n  }, genSkeletonElementInputSize(controlHeight))), _defineProperty(_ref2, \"\".concat(skeletonInputCls, \"-lg\"), Object.assign({}, genSkeletonElementInputSize(controlHeightLG))), _defineProperty(_ref2, \"\".concat(skeletonInputCls, \"-sm\"), Object.assign({}, genSkeletonElementInputSize(controlHeightSM))), _ref2;\n};\nvar genSkeletonElementImageSize = function genSkeletonElementImageSize(size) {\n  return Object.assign({\n    width: size\n  }, genSkeletonElementCommonSize(size));\n};\nvar genSkeletonElementImage = function genSkeletonElementImage(token) {\n  var _Object$assign, _ref3;\n  var skeletonImageCls = token.skeletonImageCls,\n    imageSizeBase = token.imageSizeBase,\n    color = token.color,\n    borderRadiusSM = token.borderRadiusSM;\n  return _ref3 = {}, _defineProperty(_ref3, \"\".concat(skeletonImageCls), Object.assign(Object.assign({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    verticalAlign: 'top',\n    background: color,\n    borderRadius: borderRadiusSM\n  }, genSkeletonElementImageSize(imageSizeBase * 2)), (_Object$assign = {}, _defineProperty(_Object$assign, \"\".concat(skeletonImageCls, \"-path\"), {\n    fill: '#bfbfbf'\n  }), _defineProperty(_Object$assign, \"\".concat(skeletonImageCls, \"-svg\"), Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n    maxWidth: imageSizeBase * 4,\n    maxHeight: imageSizeBase * 4\n  })), _defineProperty(_Object$assign, \"\".concat(skeletonImageCls, \"-svg\").concat(skeletonImageCls, \"-svg-circle\"), {\n    borderRadius: '50%'\n  }), _Object$assign))), _defineProperty(_ref3, \"\".concat(skeletonImageCls).concat(skeletonImageCls, \"-circle\"), {\n    borderRadius: '50%'\n  }), _ref3;\n};\nvar genSkeletonElementButtonShape = function genSkeletonElementButtonShape(token, size, buttonCls) {\n  var _ref4;\n  var skeletonButtonCls = token.skeletonButtonCls;\n  return _ref4 = {}, _defineProperty(_ref4, \"\".concat(buttonCls).concat(skeletonButtonCls, \"-circle\"), {\n    width: size,\n    minWidth: size,\n    borderRadius: '50%'\n  }), _defineProperty(_ref4, \"\".concat(buttonCls).concat(skeletonButtonCls, \"-round\"), {\n    borderRadius: size\n  }), _ref4;\n};\nvar genSkeletonElementButtonSize = function genSkeletonElementButtonSize(size) {\n  return Object.assign({\n    width: size * 2,\n    minWidth: size * 2\n  }, genSkeletonElementCommonSize(size));\n};\nvar genSkeletonElementButton = function genSkeletonElementButton(token) {\n  var borderRadiusSM = token.borderRadiusSM,\n    skeletonButtonCls = token.skeletonButtonCls,\n    controlHeight = token.controlHeight,\n    controlHeightLG = token.controlHeightLG,\n    controlHeightSM = token.controlHeightSM,\n    color = token.color;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(_defineProperty({}, \"\".concat(skeletonButtonCls), Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: color,\n    borderRadius: borderRadiusSM,\n    width: controlHeight * 2,\n    minWidth: controlHeight * 2\n  }, genSkeletonElementButtonSize(controlHeight))), genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), _defineProperty({}, \"\".concat(skeletonButtonCls, \"-lg\"), Object.assign({}, genSkeletonElementButtonSize(controlHeightLG)))), genSkeletonElementButtonShape(token, controlHeightLG, \"\".concat(skeletonButtonCls, \"-lg\"))), _defineProperty({}, \"\".concat(skeletonButtonCls, \"-sm\"), Object.assign({}, genSkeletonElementButtonSize(controlHeightSM)))), genSkeletonElementButtonShape(token, controlHeightSM, \"\".concat(skeletonButtonCls, \"-sm\")));\n};\n// =============================== Base ===============================\nvar genBaseStyle = function genBaseStyle(token) {\n  var _$concat, _$concat3, _$concat4, _$concat$concat2, _ref5;\n  var componentCls = token.componentCls,\n    skeletonAvatarCls = token.skeletonAvatarCls,\n    skeletonTitleCls = token.skeletonTitleCls,\n    skeletonParagraphCls = token.skeletonParagraphCls,\n    skeletonButtonCls = token.skeletonButtonCls,\n    skeletonInputCls = token.skeletonInputCls,\n    skeletonImageCls = token.skeletonImageCls,\n    controlHeight = token.controlHeight,\n    controlHeightLG = token.controlHeightLG,\n    controlHeightSM = token.controlHeightSM,\n    color = token.color,\n    padding = token.padding,\n    marginSM = token.marginSM,\n    borderRadius = token.borderRadius,\n    skeletonTitleHeight = token.skeletonTitleHeight,\n    skeletonBlockRadius = token.skeletonBlockRadius,\n    skeletonParagraphLineHeight = token.skeletonParagraphLineHeight,\n    controlHeightXS = token.controlHeightXS,\n    skeletonParagraphMarginTop = token.skeletonParagraphMarginTop;\n  return _ref5 = {}, _defineProperty(_ref5, \"\".concat(componentCls), (_$concat4 = {\n    display: 'table',\n    width: '100%'\n  }, _defineProperty(_$concat4, \"\".concat(componentCls, \"-header\"), (_$concat = {\n    display: 'table-cell',\n    paddingInlineEnd: padding,\n    verticalAlign: 'top'\n  }, _defineProperty(_$concat, \"\".concat(skeletonAvatarCls), Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: color\n  }, genSkeletonElementAvatarSize(controlHeight))), _defineProperty(_$concat, \"\".concat(skeletonAvatarCls, \"-circle\"), {\n    borderRadius: '50%'\n  }), _defineProperty(_$concat, \"\".concat(skeletonAvatarCls, \"-lg\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG))), _defineProperty(_$concat, \"\".concat(skeletonAvatarCls, \"-sm\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))), _$concat)), _defineProperty(_$concat4, \"\".concat(componentCls, \"-content\"), (_$concat3 = {\n    display: 'table-cell',\n    width: '100%',\n    verticalAlign: 'top'\n  }, _defineProperty(_$concat3, \"\".concat(skeletonTitleCls), _defineProperty({\n    width: '100%',\n    height: skeletonTitleHeight,\n    background: color,\n    borderRadius: skeletonBlockRadius\n  }, \"+ \".concat(skeletonParagraphCls), {\n    marginBlockStart: controlHeightSM\n  })), _defineProperty(_$concat3, \"\".concat(skeletonParagraphCls), {\n    padding: 0,\n    '> li': {\n      width: '100%',\n      height: skeletonParagraphLineHeight,\n      listStyle: 'none',\n      background: color,\n      borderRadius: skeletonBlockRadius,\n      '+ li': {\n        marginBlockStart: controlHeightXS\n      }\n    }\n  }), _defineProperty(_$concat3, \"\".concat(skeletonParagraphCls, \"> li:last-child:not(:first-child):not(:nth-child(2))\"), {\n    width: '61%'\n  }), _$concat3)), _defineProperty(_$concat4, \"&-round \".concat(componentCls, \"-content\"), _defineProperty({}, \"\".concat(skeletonTitleCls, \", \").concat(skeletonParagraphCls, \" > li\"), {\n    borderRadius: borderRadius\n  })), _$concat4)), _defineProperty(_ref5, \"\".concat(componentCls, \"-with-avatar \").concat(componentCls, \"-content\"), _defineProperty({}, \"\".concat(skeletonTitleCls), _defineProperty({\n    marginBlockStart: marginSM\n  }, \"+ \".concat(skeletonParagraphCls), {\n    marginBlockStart: skeletonParagraphMarginTop\n  }))), _defineProperty(_ref5, \"\".concat(componentCls).concat(componentCls, \"-element\"), Object.assign(Object.assign(Object.assign(Object.assign({\n    display: 'inline-block',\n    width: 'auto'\n  }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token))), _defineProperty(_ref5, \"\".concat(componentCls).concat(componentCls, \"-block\"), (_$concat$concat2 = {\n    width: '100%'\n  }, _defineProperty(_$concat$concat2, \"\".concat(skeletonButtonCls), {\n    width: '100%'\n  }), _defineProperty(_$concat$concat2, \"\".concat(skeletonInputCls), {\n    width: '100%'\n  }), _$concat$concat2)), _defineProperty(_ref5, \"\".concat(componentCls).concat(componentCls, \"-active\"), _defineProperty({}, \"\\n        \".concat(skeletonTitleCls, \",\\n        \").concat(skeletonParagraphCls, \" > li,\\n        \").concat(skeletonAvatarCls, \",\\n        \").concat(skeletonButtonCls, \",\\n        \").concat(skeletonInputCls, \",\\n        \").concat(skeletonImageCls, \"\\n      \"), Object.assign({}, genSkeletonColor(token)))), _ref5;\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Skeleton', function (token) {\n  var componentCls = token.componentCls;\n  var skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: \"\".concat(componentCls, \"-avatar\"),\n    skeletonTitleCls: \"\".concat(componentCls, \"-title\"),\n    skeletonParagraphCls: \"\".concat(componentCls, \"-paragraph\"),\n    skeletonButtonCls: \"\".concat(componentCls, \"-button\"),\n    skeletonInputCls: \"\".concat(componentCls, \"-input\"),\n    skeletonImageCls: \"\".concat(componentCls, \"-image\"),\n    imageSizeBase: token.controlHeight * 1.5,\n    skeletonTitleHeight: token.controlHeight / 2,\n    skeletonBlockRadius: token.borderRadiusSM,\n    skeletonParagraphLineHeight: token.controlHeight / 2,\n    skeletonParagraphMarginTop: token.marginLG + token.marginXXS,\n    borderRadius: 100,\n    skeletonLoadingBackground: \"linear-gradient(90deg, \".concat(token.color, \" 25%, \").concat(token.colorGradientEnd, \" 37%, \").concat(token.color, \" 63%)\"),\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, function (token) {\n  var colorFillContent = token.colorFillContent,\n    colorFill = token.colorFill;\n  return {\n    color: colorFillContent,\n    colorGradientEnd: colorFill\n  };\n});","map":{"version":3,"names":["Keyframes","genComponentStyleHook","mergeToken","skeletonClsLoading","transform","genSkeletonElementCommonSize","size","height","lineHeight","genSkeletonElementAvatarSize","Object","assign","width","genSkeletonColor","token","position","zIndex","overflow","background","top","insetInlineEnd","bottom","insetInlineStart","skeletonLoadingBackground","animationName","animationDuration","skeletonLoadingMotionDuration","animationTimingFunction","animationIterationCount","content","genSkeletonElementInputSize","minWidth","genSkeletonElementAvatar","skeletonAvatarCls","color","controlHeight","controlHeightLG","controlHeightSM","display","verticalAlign","borderRadius","genSkeletonElementInput","borderRadiusSM","skeletonInputCls","genSkeletonElementImageSize","genSkeletonElementImage","skeletonImageCls","imageSizeBase","alignItems","justifyContent","fill","maxWidth","maxHeight","genSkeletonElementButtonShape","buttonCls","skeletonButtonCls","genSkeletonElementButtonSize","genSkeletonElementButton","genBaseStyle","componentCls","skeletonTitleCls","skeletonParagraphCls","padding","marginSM","skeletonTitleHeight","skeletonBlockRadius","skeletonParagraphLineHeight","controlHeightXS","skeletonParagraphMarginTop","paddingInlineEnd","marginBlockStart","listStyle","skeletonToken","marginLG","marginXXS","colorGradientEnd","colorFillContent","colorFill"],"sources":["D:/Projects/React/Portfolio/GeneralStore/client/node_modules/antd/es/skeleton/style/index.js"],"sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nconst skeletonClsLoading = new Keyframes(`ant-skeleton-loading`, {\n  '0%': {\n    transform: 'translateX(-37.5%)'\n  },\n  '100%': {\n    transform: 'translateX(37.5%)'\n  }\n});\nconst genSkeletonElementCommonSize = size => ({\n  height: size,\n  lineHeight: `${size}px`\n});\nconst genSkeletonElementAvatarSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonColor = token => ({\n  position: 'relative',\n  // fix https://github.com/ant-design/ant-design/issues/36444\n  // https://monshin.github.io/202109/css/safari-border-radius-overflow-hidden/\n  /* stylelint-disable-next-line property-no-vendor-prefix,value-no-vendor-prefix */\n  zIndex: 0,\n  overflow: 'hidden',\n  background: 'transparent',\n  '&::after': {\n    position: 'absolute',\n    top: 0,\n    insetInlineEnd: '-150%',\n    bottom: 0,\n    insetInlineStart: '-150%',\n    background: token.skeletonLoadingBackground,\n    animationName: skeletonClsLoading,\n    animationDuration: token.skeletonLoadingMotionDuration,\n    animationTimingFunction: 'ease',\n    animationIterationCount: 'infinite',\n    content: '\"\"'\n  }\n});\nconst genSkeletonElementInputSize = size => Object.assign({\n  width: size * 5,\n  minWidth: size * 5\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementAvatar = token => {\n  const {\n    skeletonAvatarCls,\n    color,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM\n  } = token;\n  return {\n    [`${skeletonAvatarCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: color\n    }, genSkeletonElementAvatarSize(controlHeight)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-circle`]: {\n      borderRadius: '50%'\n    },\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementInput = token => {\n  const {\n    controlHeight,\n    borderRadiusSM,\n    skeletonInputCls,\n    controlHeightLG,\n    controlHeightSM,\n    color\n  } = token;\n  return {\n    [`${skeletonInputCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: color,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementInputSize(controlHeight)),\n    [`${skeletonInputCls}-lg`]: Object.assign({}, genSkeletonElementInputSize(controlHeightLG)),\n    [`${skeletonInputCls}-sm`]: Object.assign({}, genSkeletonElementInputSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementImageSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementImage = token => {\n  const {\n    skeletonImageCls,\n    imageSizeBase,\n    color,\n    borderRadiusSM\n  } = token;\n  return {\n    [`${skeletonImageCls}`]: Object.assign(Object.assign({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      verticalAlign: 'top',\n      background: color,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementImageSize(imageSizeBase * 2)), {\n      [`${skeletonImageCls}-path`]: {\n        fill: '#bfbfbf'\n      },\n      [`${skeletonImageCls}-svg`]: Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n        maxWidth: imageSizeBase * 4,\n        maxHeight: imageSizeBase * 4\n      }),\n      [`${skeletonImageCls}-svg${skeletonImageCls}-svg-circle`]: {\n        borderRadius: '50%'\n      }\n    }),\n    [`${skeletonImageCls}${skeletonImageCls}-circle`]: {\n      borderRadius: '50%'\n    }\n  };\n};\nconst genSkeletonElementButtonShape = (token, size, buttonCls) => {\n  const {\n    skeletonButtonCls\n  } = token;\n  return {\n    [`${buttonCls}${skeletonButtonCls}-circle`]: {\n      width: size,\n      minWidth: size,\n      borderRadius: '50%'\n    },\n    [`${buttonCls}${skeletonButtonCls}-round`]: {\n      borderRadius: size\n    }\n  };\n};\nconst genSkeletonElementButtonSize = size => Object.assign({\n  width: size * 2,\n  minWidth: size * 2\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementButton = token => {\n  const {\n    borderRadiusSM,\n    skeletonButtonCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    color\n  } = token;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    [`${skeletonButtonCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: color,\n      borderRadius: borderRadiusSM,\n      width: controlHeight * 2,\n      minWidth: controlHeight * 2\n    }, genSkeletonElementButtonSize(controlHeight))\n  }, genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), {\n    [`${skeletonButtonCls}-lg`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightLG))\n  }), genSkeletonElementButtonShape(token, controlHeightLG, `${skeletonButtonCls}-lg`)), {\n    [`${skeletonButtonCls}-sm`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightSM))\n  }), genSkeletonElementButtonShape(token, controlHeightSM, `${skeletonButtonCls}-sm`));\n};\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    skeletonAvatarCls,\n    skeletonTitleCls,\n    skeletonParagraphCls,\n    skeletonButtonCls,\n    skeletonInputCls,\n    skeletonImageCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    color,\n    padding,\n    marginSM,\n    borderRadius,\n    skeletonTitleHeight,\n    skeletonBlockRadius,\n    skeletonParagraphLineHeight,\n    controlHeightXS,\n    skeletonParagraphMarginTop\n  } = token;\n  return {\n    [`${componentCls}`]: {\n      display: 'table',\n      width: '100%',\n      [`${componentCls}-header`]: {\n        display: 'table-cell',\n        paddingInlineEnd: padding,\n        verticalAlign: 'top',\n        // Avatar\n        [`${skeletonAvatarCls}`]: Object.assign({\n          display: 'inline-block',\n          verticalAlign: 'top',\n          background: color\n        }, genSkeletonElementAvatarSize(controlHeight)),\n        [`${skeletonAvatarCls}-circle`]: {\n          borderRadius: '50%'\n        },\n        [`${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n        [`${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n      },\n      [`${componentCls}-content`]: {\n        display: 'table-cell',\n        width: '100%',\n        verticalAlign: 'top',\n        // Title\n        [`${skeletonTitleCls}`]: {\n          width: '100%',\n          height: skeletonTitleHeight,\n          background: color,\n          borderRadius: skeletonBlockRadius,\n          [`+ ${skeletonParagraphCls}`]: {\n            marginBlockStart: controlHeightSM\n          }\n        },\n        // paragraph\n        [`${skeletonParagraphCls}`]: {\n          padding: 0,\n          '> li': {\n            width: '100%',\n            height: skeletonParagraphLineHeight,\n            listStyle: 'none',\n            background: color,\n            borderRadius: skeletonBlockRadius,\n            '+ li': {\n              marginBlockStart: controlHeightXS\n            }\n          }\n        },\n        [`${skeletonParagraphCls}> li:last-child:not(:first-child):not(:nth-child(2))`]: {\n          width: '61%'\n        }\n      },\n      [`&-round ${componentCls}-content`]: {\n        [`${skeletonTitleCls}, ${skeletonParagraphCls} > li`]: {\n          borderRadius\n        }\n      }\n    },\n    [`${componentCls}-with-avatar ${componentCls}-content`]: {\n      // Title\n      [`${skeletonTitleCls}`]: {\n        marginBlockStart: marginSM,\n        [`+ ${skeletonParagraphCls}`]: {\n          marginBlockStart: skeletonParagraphMarginTop\n        }\n      }\n    },\n    // Skeleton element\n    [`${componentCls}${componentCls}-element`]: Object.assign(Object.assign(Object.assign(Object.assign({\n      display: 'inline-block',\n      width: 'auto'\n    }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token)),\n    // Skeleton Block Button, Input\n    [`${componentCls}${componentCls}-block`]: {\n      width: '100%',\n      [`${skeletonButtonCls}`]: {\n        width: '100%'\n      },\n      [`${skeletonInputCls}`]: {\n        width: '100%'\n      }\n    },\n    // With active animation\n    [`${componentCls}${componentCls}-active`]: {\n      [`\n        ${skeletonTitleCls},\n        ${skeletonParagraphCls} > li,\n        ${skeletonAvatarCls},\n        ${skeletonButtonCls},\n        ${skeletonInputCls},\n        ${skeletonImageCls}\n      `]: Object.assign({}, genSkeletonColor(token))\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Skeleton', token => {\n  const {\n    componentCls\n  } = token;\n  const skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: `${componentCls}-avatar`,\n    skeletonTitleCls: `${componentCls}-title`,\n    skeletonParagraphCls: `${componentCls}-paragraph`,\n    skeletonButtonCls: `${componentCls}-button`,\n    skeletonInputCls: `${componentCls}-input`,\n    skeletonImageCls: `${componentCls}-image`,\n    imageSizeBase: token.controlHeight * 1.5,\n    skeletonTitleHeight: token.controlHeight / 2,\n    skeletonBlockRadius: token.borderRadiusSM,\n    skeletonParagraphLineHeight: token.controlHeight / 2,\n    skeletonParagraphMarginTop: token.marginLG + token.marginXXS,\n    borderRadius: 100,\n    skeletonLoadingBackground: `linear-gradient(90deg, ${token.color} 25%, ${token.colorGradientEnd} 37%, ${token.color} 63%)`,\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, token => {\n  const {\n    colorFillContent,\n    colorFill\n  } = token;\n  return {\n    color: colorFillContent,\n    colorGradientEnd: colorFill\n  };\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}