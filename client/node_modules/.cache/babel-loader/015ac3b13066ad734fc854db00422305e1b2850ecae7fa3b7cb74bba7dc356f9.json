{"ast":null,"code":"import * as React from 'react';\nimport warning from '../_util/warning';\nimport { changeConfirmLocale } from '../modal/locale';\nimport LocaleContext from './context';\nexport var ANT_MARK = 'internalMark';\nvar LocaleProvider = function LocaleProvider(props) {\n  var _props$locale = props.locale,\n    locale = _props$locale === void 0 ? {} : _props$locale,\n    children = props.children,\n    _ANT_MARK__ = props._ANT_MARK__;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(_ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale') : void 0;\n  }\n  React.useEffect(function () {\n    changeConfirmLocale(locale && locale.Modal);\n    return function () {\n      changeConfirmLocale();\n    };\n  }, [locale]);\n  var getMemoizedContextValue = React.useMemo(function () {\n    return Object.assign(Object.assign({}, locale), {\n      exist: true\n    });\n  }, [locale]);\n  return /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n    value: getMemoizedContextValue\n  }, children);\n};\nif (process.env.NODE_ENV !== 'production') {\n  LocaleProvider.displayName = 'LocaleProvider';\n}\nexport default LocaleProvider;","map":{"version":3,"names":["React","warning","changeConfirmLocale","LocaleContext","ANT_MARK","LocaleProvider","props","locale","children","_ANT_MARK__","process","env","NODE_ENV","useEffect","Modal","getMemoizedContextValue","useMemo","Object","assign","exist","createElement","Provider","value","displayName"],"sources":["D:/Projects/React/Portfolio/GeneralStore/client/node_modules/antd/es/locale/index.js"],"sourcesContent":["import * as React from 'react';\nimport warning from '../_util/warning';\nimport { changeConfirmLocale } from '../modal/locale';\nimport LocaleContext from './context';\nexport const ANT_MARK = 'internalMark';\nconst LocaleProvider = props => {\n  const {\n    locale = {},\n    children,\n    _ANT_MARK__\n  } = props;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(_ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale') : void 0;\n  }\n  React.useEffect(() => {\n    changeConfirmLocale(locale && locale.Modal);\n    return () => {\n      changeConfirmLocale();\n    };\n  }, [locale]);\n  const getMemoizedContextValue = React.useMemo(() => Object.assign(Object.assign({}, locale), {\n    exist: true\n  }), [locale]);\n  return /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n    value: getMemoizedContextValue\n  }, children);\n};\nif (process.env.NODE_ENV !== 'production') {\n  LocaleProvider.displayName = 'LocaleProvider';\n}\nexport default LocaleProvider;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAASC,mBAAmB,QAAQ,iBAAiB;AACrD,OAAOC,aAAa,MAAM,WAAW;AACrC,OAAO,IAAMC,QAAQ,GAAG,cAAc;AACtC,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAGC,KAAK,EAAI;EAC9B,oBAIIA,KAAK,CAHPC,MAAM;IAANA,MAAM,8BAAG,CAAC,CAAC;IACXC,QAAQ,GAENF,KAAK,CAFPE,QAAQ;IACRC,WAAW,GACTH,KAAK,CADPG,WAAW;EAEb,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzCF,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGX,OAAO,CAACQ,WAAW,KAAKL,QAAQ,EAAE,gBAAgB,EAAE,+GAA+G,CAAC,GAAG,KAAK,CAAC;EACvN;EACAJ,KAAK,CAACa,SAAS,CAAC,YAAM;IACpBX,mBAAmB,CAACK,MAAM,IAAIA,MAAM,CAACO,KAAK,CAAC;IAC3C,OAAO,YAAM;MACXZ,mBAAmB,EAAE;IACvB,CAAC;EACH,CAAC,EAAE,CAACK,MAAM,CAAC,CAAC;EACZ,IAAMQ,uBAAuB,GAAGf,KAAK,CAACgB,OAAO,CAAC;IAAA,OAAMC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEX,MAAM,CAAC,EAAE;MAC3FY,KAAK,EAAE;IACT,CAAC,CAAC;EAAA,GAAE,CAACZ,MAAM,CAAC,CAAC;EACb,OAAO,aAAaP,KAAK,CAACoB,aAAa,CAACjB,aAAa,CAACkB,QAAQ,EAAE;IAC9DC,KAAK,EAAEP;EACT,CAAC,EAAEP,QAAQ,CAAC;AACd,CAAC;AACD,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCP,cAAc,CAACkB,WAAW,GAAG,gBAAgB;AAC/C;AACA,eAAelB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}