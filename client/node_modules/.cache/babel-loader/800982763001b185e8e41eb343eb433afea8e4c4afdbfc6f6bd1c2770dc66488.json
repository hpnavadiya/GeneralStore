{"ast":null,"code":"import _defineProperty from \"D:/Projects/React/Portfolio/GeneralStore/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { genCollapseMotion } from '../../style/motion';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genFocusOutline, resetComponent } from '../../style';\n// ============================ Keyframes =============================\nvar treeNodeFX = new Keyframes('ant-tree-node-fx-do-not-use', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n});\n// ============================== Switch ==============================\nvar getSwitchStyle = function getSwitchStyle(prefixCls, token) {\n  return _defineProperty({}, \".\".concat(prefixCls, \"-switcher-icon\"), {\n    display: 'inline-block',\n    fontSize: 10,\n    verticalAlign: 'baseline',\n    svg: {\n      transition: \"transform \".concat(token.motionDurationSlow)\n    }\n  });\n};\n// =============================== Drop ===============================\nvar getDropIndicatorStyle = function getDropIndicatorStyle(prefixCls, token) {\n  return _defineProperty({}, \".\".concat(prefixCls, \"-drop-indicator\"), {\n    position: 'absolute',\n    // it should displayed over the following node\n    zIndex: 1,\n    height: 2,\n    backgroundColor: token.colorPrimary,\n    borderRadius: 1,\n    pointerEvents: 'none',\n    '&:after': {\n      position: 'absolute',\n      top: -3,\n      insetInlineStart: -6,\n      width: 8,\n      height: 8,\n      backgroundColor: 'transparent',\n      border: \"\".concat(token.lineWidthBold, \"px solid \").concat(token.colorPrimary),\n      borderRadius: '50%',\n      content: '\"\"'\n    }\n  });\n};\nexport var genBaseStyle = function genBaseStyle(prefixCls, token) {\n  var _$concat2, _draggable, _$concat6, _$concat$concat, _showLine, _Object$assign;\n  var treeCls = token.treeCls,\n    treeNodeCls = token.treeNodeCls,\n    treeNodePadding = token.treeNodePadding,\n    treeTitleHeight = token.treeTitleHeight;\n  var treeCheckBoxMarginVertical = (treeTitleHeight - token.fontSizeLG) / 2;\n  var treeCheckBoxMarginHorizontal = token.paddingXS;\n  return _defineProperty({}, treeCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    background: token.colorBgContainer,\n    borderRadius: token.borderRadius,\n    transition: \"background-color \".concat(token.motionDurationSlow)\n  }, _defineProperty(_Object$assign, \"&\".concat(treeCls, \"-rtl\"), _defineProperty({}, \"\".concat(treeCls, \"-switcher\"), {\n    '&_close': _defineProperty({}, \"\".concat(treeCls, \"-switcher-icon\"), {\n      svg: {\n        transform: 'rotate(90deg)'\n      }\n    })\n  })), _defineProperty(_Object$assign, \"&-focused:not(:hover):not(\".concat(treeCls, \"-active-focused)\"), Object.assign({}, genFocusOutline(token))), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-list-holder-inner\"), {\n    alignItems: 'flex-start'\n  }), _defineProperty(_Object$assign, \"&\".concat(treeCls, \"-block-node\"), _defineProperty({}, \"\".concat(treeCls, \"-list-holder-inner\"), (_$concat2 = {\n    alignItems: 'stretch'\n  }, _defineProperty(_$concat2, \"\".concat(treeCls, \"-node-content-wrapper\"), {\n    flex: 'auto'\n  }), _defineProperty(_$concat2, \"\".concat(treeNodeCls, \".dragging\"), {\n    position: 'relative',\n    '&:after': {\n      position: 'absolute',\n      top: 0,\n      insetInlineEnd: 0,\n      bottom: treeNodePadding,\n      insetInlineStart: 0,\n      border: \"1px solid \".concat(token.colorPrimary),\n      opacity: 0,\n      animationName: treeNodeFX,\n      animationDuration: token.motionDurationSlow,\n      animationPlayState: 'running',\n      animationFillMode: 'forwards',\n      content: '\"\"',\n      pointerEvents: 'none'\n    }\n  }), _$concat2))), _defineProperty(_Object$assign, \"\".concat(treeNodeCls), (_$concat6 = {\n    display: 'flex',\n    alignItems: 'flex-start',\n    padding: \"0 0 \".concat(treeNodePadding, \"px 0\"),\n    outline: 'none',\n    '&-rtl': {\n      direction: 'rtl'\n    },\n    // Disabled\n    '&-disabled': _defineProperty({}, \"\".concat(treeCls, \"-node-content-wrapper\"), {\n      color: token.colorTextDisabled,\n      cursor: 'not-allowed',\n      '&:hover': {\n        background: 'transparent'\n      }\n    })\n  }, _defineProperty(_$concat6, \"&-active \".concat(treeCls, \"-node-content-wrapper\"), Object.assign({}, genFocusOutline(token))), _defineProperty(_$concat6, \"&:not(\".concat(treeNodeCls, \"-disabled).filter-node \").concat(treeCls, \"-title\"), {\n    color: 'inherit',\n    fontWeight: 500\n  }), _defineProperty(_$concat6, '&-draggable', (_draggable = {}, _defineProperty(_draggable, \"\".concat(treeCls, \"-draggable-icon\"), _defineProperty({\n    width: treeTitleHeight,\n    lineHeight: \"\".concat(treeTitleHeight, \"px\"),\n    textAlign: 'center',\n    visibility: 'visible',\n    opacity: 0.2,\n    transition: \"opacity \".concat(token.motionDurationSlow)\n  }, \"\".concat(treeNodeCls, \":hover &\"), {\n    opacity: 0.45\n  })), _defineProperty(_draggable, \"&\".concat(treeNodeCls, \"-disabled\"), _defineProperty({}, \"\".concat(treeCls, \"-draggable-icon\"), {\n    visibility: 'hidden'\n  })), _draggable)), _$concat6)), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-indent\"), {\n    alignSelf: 'stretch',\n    whiteSpace: 'nowrap',\n    userSelect: 'none',\n    '&-unit': {\n      display: 'inline-block',\n      width: treeTitleHeight\n    }\n  }), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-draggable-icon\"), {\n    visibility: 'hidden'\n  }), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-switcher\"), Object.assign(Object.assign({}, getSwitchStyle(prefixCls, token)), {\n    position: 'relative',\n    flex: 'none',\n    alignSelf: 'stretch',\n    width: treeTitleHeight,\n    margin: 0,\n    lineHeight: \"\".concat(treeTitleHeight, \"px\"),\n    textAlign: 'center',\n    cursor: 'pointer',\n    userSelect: 'none',\n    '&-noop': {\n      cursor: 'default'\n    },\n    '&_close': _defineProperty({}, \"\".concat(treeCls, \"-switcher-icon\"), {\n      svg: {\n        transform: 'rotate(-90deg)'\n      }\n    }),\n    '&-loading-icon': {\n      color: token.colorPrimary\n    },\n    '&-leaf-line': {\n      position: 'relative',\n      zIndex: 1,\n      display: 'inline-block',\n      width: '100%',\n      height: '100%',\n      // https://github.com/ant-design/ant-design/issues/31884\n      '&:before': {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: treeTitleHeight / 2,\n        bottom: -treeNodePadding,\n        marginInlineStart: -1,\n        borderInlineEnd: \"1px solid \".concat(token.colorBorder),\n        content: '\"\"'\n      },\n      '&:after': {\n        position: 'absolute',\n        width: treeTitleHeight / 2 * 0.8,\n        height: treeTitleHeight / 2,\n        borderBottom: \"1px solid \".concat(token.colorBorder),\n        content: '\"\"'\n      }\n    }\n  })), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-checkbox\"), {\n    top: 'initial',\n    marginInlineEnd: treeCheckBoxMarginHorizontal,\n    marginBlockStart: treeCheckBoxMarginVertical\n  }), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-node-content-wrapper, \").concat(treeCls, \"-checkbox + span\"), (_$concat$concat = {\n    position: 'relative',\n    zIndex: 'auto',\n    minHeight: treeTitleHeight,\n    margin: 0,\n    padding: \"0 \".concat(token.paddingXS / 2, \"px\"),\n    color: 'inherit',\n    lineHeight: \"\".concat(treeTitleHeight, \"px\"),\n    background: 'transparent',\n    borderRadius: token.borderRadius,\n    cursor: 'pointer',\n    transition: \"all \".concat(token.motionDurationMid, \", border 0s, line-height 0s, box-shadow 0s\"),\n    '&:hover': {\n      backgroundColor: token.controlItemBgHover\n    }\n  }, _defineProperty(_$concat$concat, \"&\".concat(treeCls, \"-node-selected\"), {\n    backgroundColor: token.controlItemBgActive\n  }), _defineProperty(_$concat$concat, \"\".concat(treeCls, \"-iconEle\"), {\n    display: 'inline-block',\n    width: treeTitleHeight,\n    height: treeTitleHeight,\n    lineHeight: \"\".concat(treeTitleHeight, \"px\"),\n    textAlign: 'center',\n    verticalAlign: 'top',\n    '&:empty': {\n      display: 'none'\n    }\n  }), _$concat$concat)), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-unselectable \").concat(treeCls, \"-node-content-wrapper:hover\"), {\n    backgroundColor: 'transparent'\n  }), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-node-content-wrapper\"), Object.assign({\n    lineHeight: \"\".concat(treeTitleHeight, \"px\"),\n    userSelect: 'none'\n  }, getDropIndicatorStyle(prefixCls, token))), _defineProperty(_Object$assign, \"\".concat(treeNodeCls, \".drop-container\"), {\n    '> [draggable]': {\n      boxShadow: \"0 0 0 2px \".concat(token.colorPrimary)\n    }\n  }), _defineProperty(_Object$assign, '&-show-line', (_showLine = {}, _defineProperty(_showLine, \"\".concat(treeCls, \"-indent\"), {\n    '&-unit': {\n      position: 'relative',\n      height: '100%',\n      '&:before': {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: treeTitleHeight / 2,\n        bottom: -treeNodePadding,\n        borderInlineEnd: \"1px solid \".concat(token.colorBorder),\n        content: '\"\"'\n      },\n      '&-end': {\n        '&:before': {\n          display: 'none'\n        }\n      }\n    }\n  }), _defineProperty(_showLine, \"\".concat(treeCls, \"-switcher\"), {\n    background: 'transparent',\n    '&-line-icon': {\n      // https://github.com/ant-design/ant-design/issues/32813\n      verticalAlign: '-0.15em'\n    }\n  }), _showLine)), _defineProperty(_Object$assign, \"\".concat(treeNodeCls, \"-leaf-last\"), _defineProperty({}, \"\".concat(treeCls, \"-switcher\"), {\n    '&-leaf-line': {\n      '&:before': {\n        top: 'auto !important',\n        bottom: 'auto !important',\n        height: \"\".concat(treeTitleHeight / 2, \"px !important\")\n      }\n    }\n  })), _Object$assign)));\n};\n// ============================ Directory =============================\nexport var genDirectoryStyle = function genDirectoryStyle(token) {\n  var _selected, _treeNodeCls;\n  var treeCls = token.treeCls,\n    treeNodeCls = token.treeNodeCls,\n    treeNodePadding = token.treeNodePadding;\n  return _defineProperty({}, \"\".concat(treeCls).concat(treeCls, \"-directory\"), _defineProperty({}, treeNodeCls, (_treeNodeCls = {\n    position: 'relative',\n    // Hover color\n    '&:before': {\n      position: 'absolute',\n      top: 0,\n      insetInlineEnd: 0,\n      bottom: treeNodePadding,\n      insetInlineStart: 0,\n      transition: \"background-color \".concat(token.motionDurationMid),\n      content: '\"\"',\n      pointerEvents: 'none'\n    },\n    '&:hover': {\n      '&:before': {\n        background: token.controlItemBgHover\n      }\n    },\n    // Elements\n    '> *': {\n      zIndex: 1\n    }\n  }, _defineProperty(_treeNodeCls, \"\".concat(treeCls, \"-switcher\"), {\n    transition: \"color \".concat(token.motionDurationMid)\n  }), _defineProperty(_treeNodeCls, \"\".concat(treeCls, \"-node-content-wrapper\"), _defineProperty({\n    borderRadius: 0,\n    userSelect: 'none',\n    '&:hover': {\n      background: 'transparent'\n    }\n  }, \"&\".concat(treeCls, \"-node-selected\"), {\n    color: token.colorTextLightSolid,\n    background: 'transparent'\n  })), _defineProperty(_treeNodeCls, '&-selected', (_selected = {}, _defineProperty(_selected, \"\\n            &:hover::before,\\n            &::before\\n          \", {\n    background: token.colorPrimary\n  }), _defineProperty(_selected, \"\".concat(treeCls, \"-switcher\"), {\n    color: token.colorTextLightSolid\n  }), _defineProperty(_selected, \"\".concat(treeCls, \"-node-content-wrapper\"), {\n    color: token.colorTextLightSolid,\n    background: 'transparent'\n  }), _selected)), _treeNodeCls)));\n};\n// ============================== Merged ==============================\nexport var genTreeStyle = function genTreeStyle(prefixCls, token) {\n  var treeCls = \".\".concat(prefixCls);\n  var treeNodeCls = \"\".concat(treeCls, \"-treenode\");\n  var treeNodePadding = token.paddingXS / 2;\n  var treeTitleHeight = token.controlHeightSM;\n  var treeToken = mergeToken(token, {\n    treeCls: treeCls,\n    treeNodeCls: treeNodeCls,\n    treeNodePadding: treeNodePadding,\n    treeTitleHeight: treeTitleHeight\n  });\n  return [\n  // Basic\n  genBaseStyle(prefixCls, treeToken),\n  // Directory\n  genDirectoryStyle(treeToken)];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tree', function (token, _ref) {\n  var prefixCls = _ref.prefixCls;\n  return [_defineProperty({}, token.componentCls, getCheckboxStyle(\"\".concat(prefixCls, \"-checkbox\"), token)), genTreeStyle(prefixCls, token), genCollapseMotion(token)];\n});","map":{"version":3,"names":["Keyframes","genCollapseMotion","getStyle","getCheckboxStyle","genComponentStyleHook","mergeToken","genFocusOutline","resetComponent","treeNodeFX","opacity","getSwitchStyle","prefixCls","token","display","fontSize","verticalAlign","svg","transition","motionDurationSlow","getDropIndicatorStyle","position","zIndex","height","backgroundColor","colorPrimary","borderRadius","pointerEvents","top","insetInlineStart","width","border","lineWidthBold","content","genBaseStyle","treeCls","treeNodeCls","treeNodePadding","treeTitleHeight","treeCheckBoxMarginVertical","fontSizeLG","treeCheckBoxMarginHorizontal","paddingXS","Object","assign","background","colorBgContainer","transform","alignItems","flex","insetInlineEnd","bottom","animationName","animationDuration","animationPlayState","animationFillMode","padding","outline","direction","color","colorTextDisabled","cursor","fontWeight","lineHeight","textAlign","visibility","alignSelf","whiteSpace","userSelect","margin","marginInlineStart","borderInlineEnd","colorBorder","borderBottom","marginInlineEnd","marginBlockStart","minHeight","motionDurationMid","controlItemBgHover","controlItemBgActive","boxShadow","genDirectoryStyle","colorTextLightSolid","genTreeStyle","controlHeightSM","treeToken","_ref","componentCls"],"sources":["D:/Projects/React/Portfolio/GeneralStore/client/node_modules/antd/es/tree/style/index.js"],"sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { genCollapseMotion } from '../../style/motion';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genFocusOutline, resetComponent } from '../../style';\n// ============================ Keyframes =============================\nconst treeNodeFX = new Keyframes('ant-tree-node-fx-do-not-use', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n});\n// ============================== Switch ==============================\nconst getSwitchStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-switcher-icon`]: {\n    display: 'inline-block',\n    fontSize: 10,\n    verticalAlign: 'baseline',\n    svg: {\n      transition: `transform ${token.motionDurationSlow}`\n    }\n  }\n});\n// =============================== Drop ===============================\nconst getDropIndicatorStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-drop-indicator`]: {\n    position: 'absolute',\n    // it should displayed over the following node\n    zIndex: 1,\n    height: 2,\n    backgroundColor: token.colorPrimary,\n    borderRadius: 1,\n    pointerEvents: 'none',\n    '&:after': {\n      position: 'absolute',\n      top: -3,\n      insetInlineStart: -6,\n      width: 8,\n      height: 8,\n      backgroundColor: 'transparent',\n      border: `${token.lineWidthBold}px solid ${token.colorPrimary}`,\n      borderRadius: '50%',\n      content: '\"\"'\n    }\n  }\n});\nexport const genBaseStyle = (prefixCls, token) => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    treeTitleHeight\n  } = token;\n  const treeCheckBoxMarginVertical = (treeTitleHeight - token.fontSizeLG) / 2;\n  const treeCheckBoxMarginHorizontal = token.paddingXS;\n  return {\n    [treeCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      background: token.colorBgContainer,\n      borderRadius: token.borderRadius,\n      transition: `background-color ${token.motionDurationSlow}`,\n      [`&${treeCls}-rtl`]: {\n        // >>> Switcher\n        [`${treeCls}-switcher`]: {\n          '&_close': {\n            [`${treeCls}-switcher-icon`]: {\n              svg: {\n                transform: 'rotate(90deg)'\n              }\n            }\n          }\n        }\n      },\n      [`&-focused:not(:hover):not(${treeCls}-active-focused)`]: Object.assign({}, genFocusOutline(token)),\n      // =================== Virtual List ===================\n      [`${treeCls}-list-holder-inner`]: {\n        alignItems: 'flex-start'\n      },\n      [`&${treeCls}-block-node`]: {\n        [`${treeCls}-list-holder-inner`]: {\n          alignItems: 'stretch',\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            flex: 'auto'\n          },\n          // >>> Drag\n          [`${treeNodeCls}.dragging`]: {\n            position: 'relative',\n            '&:after': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: 0,\n              bottom: treeNodePadding,\n              insetInlineStart: 0,\n              border: `1px solid ${token.colorPrimary}`,\n              opacity: 0,\n              animationName: treeNodeFX,\n              animationDuration: token.motionDurationSlow,\n              animationPlayState: 'running',\n              animationFillMode: 'forwards',\n              content: '\"\"',\n              pointerEvents: 'none'\n            }\n          }\n        }\n      },\n      // ===================== TreeNode =====================\n      [`${treeNodeCls}`]: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        padding: `0 0 ${treeNodePadding}px 0`,\n        outline: 'none',\n        '&-rtl': {\n          direction: 'rtl'\n        },\n        // Disabled\n        '&-disabled': {\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            color: token.colorTextDisabled,\n            cursor: 'not-allowed',\n            '&:hover': {\n              background: 'transparent'\n            }\n          }\n        },\n        [`&-active ${treeCls}-node-content-wrapper`]: Object.assign({}, genFocusOutline(token)),\n        [`&:not(${treeNodeCls}-disabled).filter-node ${treeCls}-title`]: {\n          color: 'inherit',\n          fontWeight: 500\n        },\n        '&-draggable': {\n          [`${treeCls}-draggable-icon`]: {\n            width: treeTitleHeight,\n            lineHeight: `${treeTitleHeight}px`,\n            textAlign: 'center',\n            visibility: 'visible',\n            opacity: 0.2,\n            transition: `opacity ${token.motionDurationSlow}`,\n            [`${treeNodeCls}:hover &`]: {\n              opacity: 0.45\n            }\n          },\n          [`&${treeNodeCls}-disabled`]: {\n            [`${treeCls}-draggable-icon`]: {\n              visibility: 'hidden'\n            }\n          }\n        }\n      },\n      // >>> Indent\n      [`${treeCls}-indent`]: {\n        alignSelf: 'stretch',\n        whiteSpace: 'nowrap',\n        userSelect: 'none',\n        '&-unit': {\n          display: 'inline-block',\n          width: treeTitleHeight\n        }\n      },\n      // >>> Drag Handler\n      [`${treeCls}-draggable-icon`]: {\n        visibility: 'hidden'\n      },\n      // >>> Switcher\n      [`${treeCls}-switcher`]: Object.assign(Object.assign({}, getSwitchStyle(prefixCls, token)), {\n        position: 'relative',\n        flex: 'none',\n        alignSelf: 'stretch',\n        width: treeTitleHeight,\n        margin: 0,\n        lineHeight: `${treeTitleHeight}px`,\n        textAlign: 'center',\n        cursor: 'pointer',\n        userSelect: 'none',\n        '&-noop': {\n          cursor: 'default'\n        },\n        '&_close': {\n          [`${treeCls}-switcher-icon`]: {\n            svg: {\n              transform: 'rotate(-90deg)'\n            }\n          }\n        },\n        '&-loading-icon': {\n          color: token.colorPrimary\n        },\n        '&-leaf-line': {\n          position: 'relative',\n          zIndex: 1,\n          display: 'inline-block',\n          width: '100%',\n          height: '100%',\n          // https://github.com/ant-design/ant-design/issues/31884\n          '&:before': {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: treeTitleHeight / 2,\n            bottom: -treeNodePadding,\n            marginInlineStart: -1,\n            borderInlineEnd: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          },\n          '&:after': {\n            position: 'absolute',\n            width: treeTitleHeight / 2 * 0.8,\n            height: treeTitleHeight / 2,\n            borderBottom: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          }\n        }\n      }),\n      // >>> Checkbox\n      [`${treeCls}-checkbox`]: {\n        top: 'initial',\n        marginInlineEnd: treeCheckBoxMarginHorizontal,\n        marginBlockStart: treeCheckBoxMarginVertical\n      },\n      // >>> Title\n      // add `${treeCls}-checkbox + span` to cover checkbox `${checkboxCls} + span`\n      [`${treeCls}-node-content-wrapper, ${treeCls}-checkbox + span`]: {\n        position: 'relative',\n        zIndex: 'auto',\n        minHeight: treeTitleHeight,\n        margin: 0,\n        padding: `0 ${token.paddingXS / 2}px`,\n        color: 'inherit',\n        lineHeight: `${treeTitleHeight}px`,\n        background: 'transparent',\n        borderRadius: token.borderRadius,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}, border 0s, line-height 0s, box-shadow 0s`,\n        '&:hover': {\n          backgroundColor: token.controlItemBgHover\n        },\n        [`&${treeCls}-node-selected`]: {\n          backgroundColor: token.controlItemBgActive\n        },\n        // Icon\n        [`${treeCls}-iconEle`]: {\n          display: 'inline-block',\n          width: treeTitleHeight,\n          height: treeTitleHeight,\n          lineHeight: `${treeTitleHeight}px`,\n          textAlign: 'center',\n          verticalAlign: 'top',\n          '&:empty': {\n            display: 'none'\n          }\n        }\n      },\n      // https://github.com/ant-design/ant-design/issues/28217\n      [`${treeCls}-unselectable ${treeCls}-node-content-wrapper:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      // ==================== Draggable =====================\n      [`${treeCls}-node-content-wrapper`]: Object.assign({\n        lineHeight: `${treeTitleHeight}px`,\n        userSelect: 'none'\n      }, getDropIndicatorStyle(prefixCls, token)),\n      [`${treeNodeCls}.drop-container`]: {\n        '> [draggable]': {\n          boxShadow: `0 0 0 2px ${token.colorPrimary}`\n        }\n      },\n      // ==================== Show Line =====================\n      '&-show-line': {\n        // ================ Indent lines ================\n        [`${treeCls}-indent`]: {\n          '&-unit': {\n            position: 'relative',\n            height: '100%',\n            '&:before': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: treeTitleHeight / 2,\n              bottom: -treeNodePadding,\n              borderInlineEnd: `1px solid ${token.colorBorder}`,\n              content: '\"\"'\n            },\n            '&-end': {\n              '&:before': {\n                display: 'none'\n              }\n            }\n          }\n        },\n        // ============== Cover Background ==============\n        [`${treeCls}-switcher`]: {\n          background: 'transparent',\n          '&-line-icon': {\n            // https://github.com/ant-design/ant-design/issues/32813\n            verticalAlign: '-0.15em'\n          }\n        }\n      },\n      [`${treeNodeCls}-leaf-last`]: {\n        [`${treeCls}-switcher`]: {\n          '&-leaf-line': {\n            '&:before': {\n              top: 'auto !important',\n              bottom: 'auto !important',\n              height: `${treeTitleHeight / 2}px !important`\n            }\n          }\n        }\n      }\n    })\n  };\n};\n// ============================ Directory =============================\nexport const genDirectoryStyle = token => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding\n  } = token;\n  return {\n    [`${treeCls}${treeCls}-directory`]: {\n      // ================== TreeNode ==================\n      [treeNodeCls]: {\n        position: 'relative',\n        // Hover color\n        '&:before': {\n          position: 'absolute',\n          top: 0,\n          insetInlineEnd: 0,\n          bottom: treeNodePadding,\n          insetInlineStart: 0,\n          transition: `background-color ${token.motionDurationMid}`,\n          content: '\"\"',\n          pointerEvents: 'none'\n        },\n        '&:hover': {\n          '&:before': {\n            background: token.controlItemBgHover\n          }\n        },\n        // Elements\n        '> *': {\n          zIndex: 1\n        },\n        // >>> Switcher\n        [`${treeCls}-switcher`]: {\n          transition: `color ${token.motionDurationMid}`\n        },\n        // >>> Title\n        [`${treeCls}-node-content-wrapper`]: {\n          borderRadius: 0,\n          userSelect: 'none',\n          '&:hover': {\n            background: 'transparent'\n          },\n          [`&${treeCls}-node-selected`]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        },\n        // ============= Selected =============\n        '&-selected': {\n          [`\n            &:hover::before,\n            &::before\n          `]: {\n            background: token.colorPrimary\n          },\n          // >>> Switcher\n          [`${treeCls}-switcher`]: {\n            color: token.colorTextLightSolid\n          },\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        }\n      }\n    }\n  };\n};\n// ============================== Merged ==============================\nexport const genTreeStyle = (prefixCls, token) => {\n  const treeCls = `.${prefixCls}`;\n  const treeNodeCls = `${treeCls}-treenode`;\n  const treeNodePadding = token.paddingXS / 2;\n  const treeTitleHeight = token.controlHeightSM;\n  const treeToken = mergeToken(token, {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    treeTitleHeight\n  });\n  return [\n  // Basic\n  genBaseStyle(prefixCls, treeToken),\n  // Directory\n  genDirectoryStyle(treeToken)];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tree', (token, _ref) => {\n  let {\n    prefixCls\n  } = _ref;\n  return [{\n    [token.componentCls]: getCheckboxStyle(`${prefixCls}-checkbox`, token)\n  }, genTreeStyle(prefixCls, token), genCollapseMotion(token)];\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}