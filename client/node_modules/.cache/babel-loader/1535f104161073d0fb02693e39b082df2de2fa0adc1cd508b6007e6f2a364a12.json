{"ast":null,"code":"import * as React from 'react';\nimport LocaleContext from './context';\nimport defaultLocaleData from './en_US';\nvar LocaleReceiver = function LocaleReceiver(props) {\n  var _props$componentName = props.componentName,\n    componentName = _props$componentName === void 0 ? 'global' : _props$componentName,\n    defaultLocale = props.defaultLocale,\n    children = props.children;\n  var antLocale = React.useContext(LocaleContext);\n  var getLocale = React.useMemo(function () {\n    var _a;\n    var locale = defaultLocale || defaultLocaleData[componentName];\n    var localeFromContext = (_a = antLocale === null || antLocale === void 0 ? void 0 : antLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return Object.assign(Object.assign({}, locale instanceof Function ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, antLocale]);\n  var getLocaleCode = React.useMemo(function () {\n    var localeCode = antLocale && antLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if (antLocale && antLocale.exist && !localeCode) {\n      return defaultLocaleData.locale;\n    }\n    return localeCode;\n  }, [antLocale]);\n  return children(getLocale, getLocaleCode, antLocale);\n};\nexport default LocaleReceiver;\nexport var useLocaleReceiver = function useLocaleReceiver(componentName, defaultLocale) {\n  var antLocale = React.useContext(LocaleContext);\n  var getLocale = React.useMemo(function () {\n    var _a;\n    var locale = defaultLocale || defaultLocaleData[componentName];\n    var localeFromContext = (_a = antLocale === null || antLocale === void 0 ? void 0 : antLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return Object.assign(Object.assign({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, antLocale]);\n  return [getLocale];\n};","map":{"version":3,"names":["React","LocaleContext","defaultLocaleData","LocaleReceiver","props","componentName","defaultLocale","children","antLocale","useContext","getLocale","useMemo","_a","locale","localeFromContext","Object","assign","Function","getLocaleCode","localeCode","exist","useLocaleReceiver"],"sources":["D:/Projects/React/Portfolio/GeneralStore/client/node_modules/antd/es/locale/LocaleReceiver.js"],"sourcesContent":["import * as React from 'react';\nimport LocaleContext from './context';\nimport defaultLocaleData from './en_US';\nconst LocaleReceiver = props => {\n  const {\n    componentName = 'global',\n    defaultLocale,\n    children\n  } = props;\n  const antLocale = React.useContext(LocaleContext);\n  const getLocale = React.useMemo(() => {\n    var _a;\n    const locale = defaultLocale || defaultLocaleData[componentName];\n    const localeFromContext = (_a = antLocale === null || antLocale === void 0 ? void 0 : antLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return Object.assign(Object.assign({}, locale instanceof Function ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, antLocale]);\n  const getLocaleCode = React.useMemo(() => {\n    const localeCode = antLocale && antLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if (antLocale && antLocale.exist && !localeCode) {\n      return defaultLocaleData.locale;\n    }\n    return localeCode;\n  }, [antLocale]);\n  return children(getLocale, getLocaleCode, antLocale);\n};\nexport default LocaleReceiver;\nexport const useLocaleReceiver = (componentName, defaultLocale) => {\n  const antLocale = React.useContext(LocaleContext);\n  const getLocale = React.useMemo(() => {\n    var _a;\n    const locale = defaultLocale || defaultLocaleData[componentName];\n    const localeFromContext = (_a = antLocale === null || antLocale === void 0 ? void 0 : antLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return Object.assign(Object.assign({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, antLocale]);\n  return [getLocale];\n};"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,aAAa,MAAM,WAAW;AACrC,OAAOC,iBAAiB,MAAM,SAAS;AACvC,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAGC,KAAK,EAAI;EAC9B,2BAIIA,KAAK,CAHPC,aAAa;IAAbA,aAAa,qCAAG,QAAQ;IACxBC,aAAa,GAEXF,KAAK,CAFPE,aAAa;IACbC,QAAQ,GACNH,KAAK,CADPG,QAAQ;EAEV,IAAMC,SAAS,GAAGR,KAAK,CAACS,UAAU,CAACR,aAAa,CAAC;EACjD,IAAMS,SAAS,GAAGV,KAAK,CAACW,OAAO,CAAC,YAAM;IACpC,IAAIC,EAAE;IACN,IAAMC,MAAM,GAAGP,aAAa,IAAIJ,iBAAiB,CAACG,aAAa,CAAC;IAChE,IAAMS,iBAAiB,GAAG,CAACF,EAAE,GAAGJ,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACH,aAAa,CAAC,MAAM,IAAI,IAAIO,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC;IACnJ,OAAOG,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,MAAM,YAAYI,QAAQ,GAAGJ,MAAM,EAAE,GAAGA,MAAM,CAAC,EAAEC,iBAAiB,IAAI,CAAC,CAAC,CAAC;EAClH,CAAC,EAAE,CAACT,aAAa,EAAEC,aAAa,EAAEE,SAAS,CAAC,CAAC;EAC7C,IAAMU,aAAa,GAAGlB,KAAK,CAACW,OAAO,CAAC,YAAM;IACxC,IAAMQ,UAAU,GAAGX,SAAS,IAAIA,SAAS,CAACK,MAAM;IAChD;IACA,IAAIL,SAAS,IAAIA,SAAS,CAACY,KAAK,IAAI,CAACD,UAAU,EAAE;MAC/C,OAAOjB,iBAAiB,CAACW,MAAM;IACjC;IACA,OAAOM,UAAU;EACnB,CAAC,EAAE,CAACX,SAAS,CAAC,CAAC;EACf,OAAOD,QAAQ,CAACG,SAAS,EAAEQ,aAAa,EAAEV,SAAS,CAAC;AACtD,CAAC;AACD,eAAeL,cAAc;AAC7B,OAAO,IAAMkB,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIhB,aAAa,EAAEC,aAAa,EAAK;EACjE,IAAME,SAAS,GAAGR,KAAK,CAACS,UAAU,CAACR,aAAa,CAAC;EACjD,IAAMS,SAAS,GAAGV,KAAK,CAACW,OAAO,CAAC,YAAM;IACpC,IAAIC,EAAE;IACN,IAAMC,MAAM,GAAGP,aAAa,IAAIJ,iBAAiB,CAACG,aAAa,CAAC;IAChE,IAAMS,iBAAiB,GAAG,CAACF,EAAE,GAAGJ,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACH,aAAa,CAAC,MAAM,IAAI,IAAIO,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC;IACnJ,OAAOG,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,OAAOH,MAAM,KAAK,UAAU,GAAGA,MAAM,EAAE,GAAGA,MAAM,CAAC,EAAEC,iBAAiB,IAAI,CAAC,CAAC,CAAC;EACpH,CAAC,EAAE,CAACT,aAAa,EAAEC,aAAa,EAAEE,SAAS,CAAC,CAAC;EAC7C,OAAO,CAACE,SAAS,CAAC;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}