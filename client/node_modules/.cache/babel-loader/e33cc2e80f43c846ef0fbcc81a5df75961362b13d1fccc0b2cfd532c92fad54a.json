{"ast":null,"code":"import _defineProperty from \"D:/Projects/React/Portfolio/GeneralStore/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Keyframes } from '@ant-design/cssinjs';\nvar uploadAnimateInlineIn = new Keyframes('uploadAnimateInlineIn', {\n  from: {\n    width: 0,\n    height: 0,\n    margin: 0,\n    padding: 0,\n    opacity: 0\n  }\n});\nvar uploadAnimateInlineOut = new Keyframes('uploadAnimateInlineOut', {\n  to: {\n    width: 0,\n    height: 0,\n    margin: 0,\n    padding: 0,\n    opacity: 0\n  }\n});\n// =========================== Motion ===========================\nvar genMotionStyle = function genMotionStyle(token) {\n  var _$concat;\n  var componentCls = token.componentCls;\n  var inlineCls = \"\".concat(componentCls, \"-animate-inline\");\n  return [_defineProperty({}, \"\".concat(componentCls, \"-wrapper\"), (_$concat = {}, _defineProperty(_$concat, \"\".concat(inlineCls, \"-appear, \").concat(inlineCls, \"-enter, \").concat(inlineCls, \"-leave\"), {\n    animationDuration: token.motionDurationSlow,\n    animationTimingFunction: token.motionEaseInOutCirc,\n    animationFillMode: 'forwards'\n  }), _defineProperty(_$concat, \"\".concat(inlineCls, \"-appear, \").concat(inlineCls, \"-enter\"), {\n    animationName: uploadAnimateInlineIn\n  }), _defineProperty(_$concat, \"\".concat(inlineCls, \"-leave\"), {\n    animationName: uploadAnimateInlineOut\n  }), _$concat)), uploadAnimateInlineIn, uploadAnimateInlineOut];\n};\nexport default genMotionStyle;","map":{"version":3,"names":["Keyframes","uploadAnimateInlineIn","from","width","height","margin","padding","opacity","uploadAnimateInlineOut","to","genMotionStyle","token","componentCls","inlineCls","animationDuration","motionDurationSlow","animationTimingFunction","motionEaseInOutCirc","animationFillMode","animationName"],"sources":["D:/Projects/React/Portfolio/GeneralStore/client/node_modules/antd/es/upload/style/motion.js"],"sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nconst uploadAnimateInlineIn = new Keyframes('uploadAnimateInlineIn', {\n  from: {\n    width: 0,\n    height: 0,\n    margin: 0,\n    padding: 0,\n    opacity: 0\n  }\n});\nconst uploadAnimateInlineOut = new Keyframes('uploadAnimateInlineOut', {\n  to: {\n    width: 0,\n    height: 0,\n    margin: 0,\n    padding: 0,\n    opacity: 0\n  }\n});\n// =========================== Motion ===========================\nconst genMotionStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const inlineCls = `${componentCls}-animate-inline`;\n  return [{\n    [`${componentCls}-wrapper`]: {\n      [`${inlineCls}-appear, ${inlineCls}-enter, ${inlineCls}-leave`]: {\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseInOutCirc,\n        animationFillMode: 'forwards'\n      },\n      [`${inlineCls}-appear, ${inlineCls}-enter`]: {\n        animationName: uploadAnimateInlineIn\n      },\n      [`${inlineCls}-leave`]: {\n        animationName: uploadAnimateInlineOut\n      }\n    }\n  }, uploadAnimateInlineIn, uploadAnimateInlineOut];\n};\nexport default genMotionStyle;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,IAAMC,qBAAqB,GAAG,IAAID,SAAS,CAAC,uBAAuB,EAAE;EACnEE,IAAI,EAAE;IACJC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AACF,IAAMC,sBAAsB,GAAG,IAAIR,SAAS,CAAC,wBAAwB,EAAE;EACrES,EAAE,EAAE;IACFN,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AACF;AACA,IAAMG,cAAc,GAAG,SAAjBA,cAAc,CAAGC,KAAK,EAAI;EAAA;EAC9B,IACEC,YAAY,GACVD,KAAK,CADPC,YAAY;EAEd,IAAMC,SAAS,aAAMD,YAAY,oBAAiB;EAClD,OAAO,+BACDA,YAAY,mEACVC,SAAS,sBAAYA,SAAS,qBAAWA,SAAS,aAAW;IAC/DC,iBAAiB,EAAEH,KAAK,CAACI,kBAAkB;IAC3CC,uBAAuB,EAAEL,KAAK,CAACM,mBAAmB;IAClDC,iBAAiB,EAAE;EACrB,CAAC,uCACGL,SAAS,sBAAYA,SAAS,aAAW;IAC3CM,aAAa,EAAElB;EACjB,CAAC,uCACGY,SAAS,aAAW;IACtBM,aAAa,EAAEX;EACjB,CAAC,eAEFP,qBAAqB,EAAEO,sBAAsB,CAAC;AACnD,CAAC;AACD,eAAeE,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}