{"ast":null,"code":"import _slicedToArray from \"D:/Projects/React/Portfolio/GeneralStore/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"D:/Projects/React/Portfolio/GeneralStore/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/React/Portfolio/GeneralStore/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _createForOfIteratorHelper from \"D:/Projects/React/Portfolio/GeneralStore/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar __objRest = function __objRest(source, exclude) {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) {\n    var _iterator2 = _createForOfIteratorHelper(__getOwnPropSymbols(source)),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var prop = _step2.value;\n        if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return target;\n};\n\n// src/index.tsx\nimport React, { useRef, useEffect, useState } from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n(function (qrcodegen2) {\n  var _QrCode = /*#__PURE__*/function () {\n    function _QrCode(version, errorCorrectionLevel, dataCodewords, msk) {\n      _classCallCheck(this, _QrCode);\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION) throw new RangeError(\"Version value out of range\");\n      if (msk < -1 || msk > 7) throw new RangeError(\"Mask value out of range\");\n      this.size = version * 4 + 17;\n      var row = [];\n      for (var i = 0; i < this.size; i++) row.push(false);\n      for (var _i = 0; _i < this.size; _i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      var allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        var minPenalty = 1e9;\n        for (var _i2 = 0; _i2 < 8; _i2++) {\n          this.applyMask(_i2);\n          this.drawFormatBits(_i2);\n          var penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = _i2;\n            minPenalty = penalty;\n          }\n          this.applyMask(_i2);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    _createClass(_QrCode, [{\n      key: \"getModule\",\n      value: function getModule(x, y) {\n        return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n      }\n    }, {\n      key: \"getModules\",\n      value: function getModules() {\n        return this.modules;\n      }\n    }, {\n      key: \"drawFunctionPatterns\",\n      value: function drawFunctionPatterns() {\n        for (var i = 0; i < this.size; i++) {\n          this.setFunctionModule(6, i, i % 2 == 0);\n          this.setFunctionModule(i, 6, i % 2 == 0);\n        }\n        this.drawFinderPattern(3, 3);\n        this.drawFinderPattern(this.size - 4, 3);\n        this.drawFinderPattern(3, this.size - 4);\n        var alignPatPos = this.getAlignmentPatternPositions();\n        var numAlign = alignPatPos.length;\n        for (var _i3 = 0; _i3 < numAlign; _i3++) {\n          for (var j = 0; j < numAlign; j++) {\n            if (!(_i3 == 0 && j == 0 || _i3 == 0 && j == numAlign - 1 || _i3 == numAlign - 1 && j == 0)) this.drawAlignmentPattern(alignPatPos[_i3], alignPatPos[j]);\n          }\n        }\n        this.drawFormatBits(0);\n        this.drawVersion();\n      }\n    }, {\n      key: \"drawFormatBits\",\n      value: function drawFormatBits(mask) {\n        var data = this.errorCorrectionLevel.formatBits << 3 | mask;\n        var rem = data;\n        for (var i = 0; i < 10; i++) rem = rem << 1 ^ (rem >>> 9) * 1335;\n        var bits = (data << 10 | rem) ^ 21522;\n        assert(bits >>> 15 == 0);\n        for (var _i4 = 0; _i4 <= 5; _i4++) this.setFunctionModule(8, _i4, getBit(bits, _i4));\n        this.setFunctionModule(8, 7, getBit(bits, 6));\n        this.setFunctionModule(8, 8, getBit(bits, 7));\n        this.setFunctionModule(7, 8, getBit(bits, 8));\n        for (var _i5 = 9; _i5 < 15; _i5++) this.setFunctionModule(14 - _i5, 8, getBit(bits, _i5));\n        for (var _i6 = 0; _i6 < 8; _i6++) this.setFunctionModule(this.size - 1 - _i6, 8, getBit(bits, _i6));\n        for (var _i7 = 8; _i7 < 15; _i7++) this.setFunctionModule(8, this.size - 15 + _i7, getBit(bits, _i7));\n        this.setFunctionModule(8, this.size - 8, true);\n      }\n    }, {\n      key: \"drawVersion\",\n      value: function drawVersion() {\n        if (this.version < 7) return;\n        var rem = this.version;\n        for (var i = 0; i < 12; i++) rem = rem << 1 ^ (rem >>> 11) * 7973;\n        var bits = this.version << 12 | rem;\n        assert(bits >>> 18 == 0);\n        for (var _i8 = 0; _i8 < 18; _i8++) {\n          var color = getBit(bits, _i8);\n          var a = this.size - 11 + _i8 % 3;\n          var b = Math.floor(_i8 / 3);\n          this.setFunctionModule(a, b, color);\n          this.setFunctionModule(b, a, color);\n        }\n      }\n    }, {\n      key: \"drawFinderPattern\",\n      value: function drawFinderPattern(x, y) {\n        for (var dy = -4; dy <= 4; dy++) {\n          for (var dx = -4; dx <= 4; dx++) {\n            var dist = Math.max(Math.abs(dx), Math.abs(dy));\n            var xx = x + dx;\n            var yy = y + dy;\n            if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size) this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n          }\n        }\n      }\n    }, {\n      key: \"drawAlignmentPattern\",\n      value: function drawAlignmentPattern(x, y) {\n        for (var dy = -2; dy <= 2; dy++) {\n          for (var dx = -2; dx <= 2; dx++) this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n        }\n      }\n    }, {\n      key: \"setFunctionModule\",\n      value: function setFunctionModule(x, y, isDark) {\n        this.modules[y][x] = isDark;\n        this.isFunction[y][x] = true;\n      }\n    }, {\n      key: \"addEccAndInterleave\",\n      value: function addEccAndInterleave(data) {\n        var ver = this.version;\n        var ecl = this.errorCorrectionLevel;\n        if (data.length != _QrCode.getNumDataCodewords(ver, ecl)) throw new RangeError(\"Invalid argument\");\n        var numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n        var blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n        var rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n        var numShortBlocks = numBlocks - rawCodewords % numBlocks;\n        var shortBlockLen = Math.floor(rawCodewords / numBlocks);\n        var blocks = [];\n        var rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n        for (var i = 0, k = 0; i < numBlocks; i++) {\n          var dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n          k += dat.length;\n          var ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n          if (i < numShortBlocks) dat.push(0);\n          blocks.push(dat.concat(ecc));\n        }\n        var result = [];\n        var _loop = function _loop(i) {\n          blocks.forEach(function (block, j) {\n            if (i != shortBlockLen - blockEccLen || j >= numShortBlocks) result.push(block[i]);\n          });\n        };\n        for (var _i9 = 0; _i9 < blocks[0].length; _i9++) {\n          _loop(_i9);\n        }\n        assert(result.length == rawCodewords);\n        return result;\n      }\n    }, {\n      key: \"drawCodewords\",\n      value: function drawCodewords(data) {\n        if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8)) throw new RangeError(\"Invalid argument\");\n        var i = 0;\n        for (var right = this.size - 1; right >= 1; right -= 2) {\n          if (right == 6) right = 5;\n          for (var vert = 0; vert < this.size; vert++) {\n            for (var j = 0; j < 2; j++) {\n              var x = right - j;\n              var upward = (right + 1 & 2) == 0;\n              var y = upward ? this.size - 1 - vert : vert;\n              if (!this.isFunction[y][x] && i < data.length * 8) {\n                this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n                i++;\n              }\n            }\n          }\n        }\n        assert(i == data.length * 8);\n      }\n    }, {\n      key: \"applyMask\",\n      value: function applyMask(mask) {\n        if (mask < 0 || mask > 7) throw new RangeError(\"Mask value out of range\");\n        for (var y = 0; y < this.size; y++) {\n          for (var x = 0; x < this.size; x++) {\n            var invert = void 0;\n            switch (mask) {\n              case 0:\n                invert = (x + y) % 2 == 0;\n                break;\n              case 1:\n                invert = y % 2 == 0;\n                break;\n              case 2:\n                invert = x % 3 == 0;\n                break;\n              case 3:\n                invert = (x + y) % 3 == 0;\n                break;\n              case 4:\n                invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n                break;\n              case 5:\n                invert = x * y % 2 + x * y % 3 == 0;\n                break;\n              case 6:\n                invert = (x * y % 2 + x * y % 3) % 2 == 0;\n                break;\n              case 7:\n                invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n                break;\n              default:\n                throw new Error(\"Unreachable\");\n            }\n            if (!this.isFunction[y][x] && invert) this.modules[y][x] = !this.modules[y][x];\n          }\n        }\n      }\n    }, {\n      key: \"getPenaltyScore\",\n      value: function getPenaltyScore() {\n        var result = 0;\n        for (var y = 0; y < this.size; y++) {\n          var runColor = false;\n          var runX = 0;\n          var runHistory = [0, 0, 0, 0, 0, 0, 0];\n          for (var x = 0; x < this.size; x++) {\n            if (this.modules[y][x] == runColor) {\n              runX++;\n              if (runX == 5) result += _QrCode.PENALTY_N1;else if (runX > 5) result++;\n            } else {\n              this.finderPenaltyAddHistory(runX, runHistory);\n              if (!runColor) result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n              runColor = this.modules[y][x];\n              runX = 1;\n            }\n          }\n          result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n        }\n        for (var _x = 0; _x < this.size; _x++) {\n          var _runColor = false;\n          var runY = 0;\n          var _runHistory = [0, 0, 0, 0, 0, 0, 0];\n          for (var _y = 0; _y < this.size; _y++) {\n            if (this.modules[_y][_x] == _runColor) {\n              runY++;\n              if (runY == 5) result += _QrCode.PENALTY_N1;else if (runY > 5) result++;\n            } else {\n              this.finderPenaltyAddHistory(runY, _runHistory);\n              if (!_runColor) result += this.finderPenaltyCountPatterns(_runHistory) * _QrCode.PENALTY_N3;\n              _runColor = this.modules[_y][_x];\n              runY = 1;\n            }\n          }\n          result += this.finderPenaltyTerminateAndCount(_runColor, runY, _runHistory) * _QrCode.PENALTY_N3;\n        }\n        for (var _y2 = 0; _y2 < this.size - 1; _y2++) {\n          for (var _x2 = 0; _x2 < this.size - 1; _x2++) {\n            var color = this.modules[_y2][_x2];\n            if (color == this.modules[_y2][_x2 + 1] && color == this.modules[_y2 + 1][_x2] && color == this.modules[_y2 + 1][_x2 + 1]) result += _QrCode.PENALTY_N2;\n          }\n        }\n        var dark = 0;\n        var _iterator3 = _createForOfIteratorHelper(this.modules),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var row = _step3.value;\n            dark = row.reduce(function (sum, color) {\n              return sum + (color ? 1 : 0);\n            }, dark);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n        var total = this.size * this.size;\n        var k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n        assert(0 <= k && k <= 9);\n        result += k * _QrCode.PENALTY_N4;\n        assert(0 <= result && result <= 2568888);\n        return result;\n      }\n    }, {\n      key: \"getAlignmentPatternPositions\",\n      value: function getAlignmentPatternPositions() {\n        if (this.version == 1) return [];else {\n          var numAlign = Math.floor(this.version / 7) + 2;\n          var step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n          var result = [6];\n          for (var pos = this.size - 7; result.length < numAlign; pos -= step) result.splice(1, 0, pos);\n          return result;\n        }\n      }\n    }, {\n      key: \"finderPenaltyCountPatterns\",\n      value: function finderPenaltyCountPatterns(runHistory) {\n        var n = runHistory[1];\n        assert(n <= this.size * 3);\n        var core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n        return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n      }\n    }, {\n      key: \"finderPenaltyTerminateAndCount\",\n      value: function finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n        if (currentRunColor) {\n          this.finderPenaltyAddHistory(currentRunLength, runHistory);\n          currentRunLength = 0;\n        }\n        currentRunLength += this.size;\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        return this.finderPenaltyCountPatterns(runHistory);\n      }\n    }, {\n      key: \"finderPenaltyAddHistory\",\n      value: function finderPenaltyAddHistory(currentRunLength, runHistory) {\n        if (runHistory[0] == 0) currentRunLength += this.size;\n        runHistory.pop();\n        runHistory.unshift(currentRunLength);\n      }\n    }], [{\n      key: \"encodeText\",\n      value: function encodeText(text, ecl) {\n        var segs = qrcodegen2.QrSegment.makeSegments(text);\n        return _QrCode.encodeSegments(segs, ecl);\n      }\n    }, {\n      key: \"encodeBinary\",\n      value: function encodeBinary(data, ecl) {\n        var seg = qrcodegen2.QrSegment.makeBytes(data);\n        return _QrCode.encodeSegments([seg], ecl);\n      }\n    }, {\n      key: \"encodeSegments\",\n      value: function encodeSegments(segs, ecl) {\n        var minVersion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var maxVersion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 40;\n        var mask = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\n        var boostEcl = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n        if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7) throw new RangeError(\"Invalid value\");\n        var version;\n        var dataUsedBits;\n        for (version = minVersion;; version++) {\n          var dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n          var usedBits = QrSegment.getTotalBits(segs, version);\n          if (usedBits <= dataCapacityBits2) {\n            dataUsedBits = usedBits;\n            break;\n          }\n          if (version >= maxVersion) throw new RangeError(\"Data too long\");\n        }\n        for (var _i10 = 0, _arr = [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]; _i10 < _arr.length; _i10++) {\n          var newEcl = _arr[_i10];\n          if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8) ecl = newEcl;\n        }\n        var bb = [];\n        var _iterator4 = _createForOfIteratorHelper(segs),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var seg = _step4.value;\n            appendBits(seg.mode.modeBits, 4, bb);\n            appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n            var _iterator5 = _createForOfIteratorHelper(seg.getData()),\n              _step5;\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var b = _step5.value;\n                bb.push(b);\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n        assert(bb.length == dataUsedBits);\n        var dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        assert(bb.length <= dataCapacityBits);\n        appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n        appendBits(0, (8 - bb.length % 8) % 8, bb);\n        assert(bb.length % 8 == 0);\n        for (var padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17) appendBits(padByte, 8, bb);\n        var dataCodewords = [];\n        while (dataCodewords.length * 8 < bb.length) dataCodewords.push(0);\n        bb.forEach(function (b, i) {\n          return dataCodewords[i >>> 3] |= b << 7 - (i & 7);\n        });\n        return new _QrCode(version, ecl, dataCodewords, mask);\n      }\n    }, {\n      key: \"getNumRawDataModules\",\n      value: function getNumRawDataModules(ver) {\n        if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION) throw new RangeError(\"Version number out of range\");\n        var result = (16 * ver + 128) * ver + 64;\n        if (ver >= 2) {\n          var numAlign = Math.floor(ver / 7) + 2;\n          result -= (25 * numAlign - 10) * numAlign - 55;\n          if (ver >= 7) result -= 36;\n        }\n        assert(208 <= result && result <= 29648);\n        return result;\n      }\n    }, {\n      key: \"getNumDataCodewords\",\n      value: function getNumDataCodewords(ver, ecl) {\n        return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      }\n    }, {\n      key: \"reedSolomonComputeDivisor\",\n      value: function reedSolomonComputeDivisor(degree) {\n        if (degree < 1 || degree > 255) throw new RangeError(\"Degree out of range\");\n        var result = [];\n        for (var i = 0; i < degree - 1; i++) result.push(0);\n        result.push(1);\n        var root = 1;\n        for (var _i11 = 0; _i11 < degree; _i11++) {\n          for (var j = 0; j < result.length; j++) {\n            result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n            if (j + 1 < result.length) result[j] ^= result[j + 1];\n          }\n          root = _QrCode.reedSolomonMultiply(root, 2);\n        }\n        return result;\n      }\n    }, {\n      key: \"reedSolomonComputeRemainder\",\n      value: function reedSolomonComputeRemainder(data, divisor) {\n        var result = divisor.map(function (_) {\n          return 0;\n        });\n        var _iterator6 = _createForOfIteratorHelper(data),\n          _step6;\n        try {\n          var _loop2 = function _loop2() {\n            var b = _step6.value;\n            var factor = b ^ result.shift();\n            result.push(0);\n            divisor.forEach(function (coef, i) {\n              return result[i] ^= _QrCode.reedSolomonMultiply(coef, factor);\n            });\n          };\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            _loop2();\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n        return result;\n      }\n    }, {\n      key: \"reedSolomonMultiply\",\n      value: function reedSolomonMultiply(x, y) {\n        if (x >>> 8 != 0 || y >>> 8 != 0) throw new RangeError(\"Byte out of range\");\n        var z = 0;\n        for (var i = 7; i >= 0; i--) {\n          z = z << 1 ^ (z >>> 7) * 285;\n          z ^= (y >>> i & 1) * x;\n        }\n        assert(z >>> 8 == 0);\n        return z;\n      }\n    }]);\n    return _QrCode;\n  }();\n  var QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [[-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30], [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28], [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30], [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [[-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25], [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49], [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68], [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0) throw new RangeError(\"Value out of range\");\n    for (var i = len - 1; i >= 0; i--) bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond) throw new Error(\"Assertion error\");\n  }\n  var _QrSegment = /*#__PURE__*/function () {\n    function _QrSegment(mode, numChars, bitData) {\n      _classCallCheck(this, _QrSegment);\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0) throw new RangeError(\"Invalid argument\");\n      this.bitData = bitData.slice();\n    }\n    _createClass(_QrSegment, [{\n      key: \"getData\",\n      value: function getData() {\n        return this.bitData.slice();\n      }\n    }], [{\n      key: \"makeBytes\",\n      value: function makeBytes(data) {\n        var bb = [];\n        var _iterator7 = _createForOfIteratorHelper(data),\n          _step7;\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            var b = _step7.value;\n            appendBits(b, 8, bb);\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n        return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n      }\n    }, {\n      key: \"makeNumeric\",\n      value: function makeNumeric(digits) {\n        if (!_QrSegment.isNumeric(digits)) throw new RangeError(\"String contains non-numeric characters\");\n        var bb = [];\n        for (var i = 0; i < digits.length;) {\n          var n = Math.min(digits.length - i, 3);\n          appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n          i += n;\n        }\n        return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n      }\n    }, {\n      key: \"makeAlphanumeric\",\n      value: function makeAlphanumeric(text) {\n        if (!_QrSegment.isAlphanumeric(text)) throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");\n        var bb = [];\n        var i;\n        for (i = 0; i + 2 <= text.length; i += 2) {\n          var temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n          temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n          appendBits(temp, 11, bb);\n        }\n        if (i < text.length) appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n        return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n      }\n    }, {\n      key: \"makeSegments\",\n      value: function makeSegments(text) {\n        if (text == \"\") return [];else if (_QrSegment.isNumeric(text)) return [_QrSegment.makeNumeric(text)];else if (_QrSegment.isAlphanumeric(text)) return [_QrSegment.makeAlphanumeric(text)];else return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n      }\n    }, {\n      key: \"makeEci\",\n      value: function makeEci(assignVal) {\n        var bb = [];\n        if (assignVal < 0) throw new RangeError(\"ECI assignment value out of range\");else if (assignVal < 1 << 7) appendBits(assignVal, 8, bb);else if (assignVal < 1 << 14) {\n          appendBits(2, 2, bb);\n          appendBits(assignVal, 14, bb);\n        } else if (assignVal < 1e6) {\n          appendBits(6, 3, bb);\n          appendBits(assignVal, 21, bb);\n        } else throw new RangeError(\"ECI assignment value out of range\");\n        return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n      }\n    }, {\n      key: \"isNumeric\",\n      value: function isNumeric(text) {\n        return _QrSegment.NUMERIC_REGEX.test(text);\n      }\n    }, {\n      key: \"isAlphanumeric\",\n      value: function isAlphanumeric(text) {\n        return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n      }\n    }, {\n      key: \"getTotalBits\",\n      value: function getTotalBits(segs, version) {\n        var result = 0;\n        var _iterator8 = _createForOfIteratorHelper(segs),\n          _step8;\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var seg = _step8.value;\n            var ccbits = seg.mode.numCharCountBits(version);\n            if (seg.numChars >= 1 << ccbits) return Infinity;\n            result += 4 + ccbits + seg.bitData.length;\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n        return result;\n      }\n    }, {\n      key: \"toUtf8ByteArray\",\n      value: function toUtf8ByteArray(str) {\n        str = encodeURI(str);\n        var result = [];\n        for (var i = 0; i < str.length; i++) {\n          if (str.charAt(i) != \"%\") result.push(str.charCodeAt(i));else {\n            result.push(parseInt(str.substr(i + 1, 2), 16));\n            i += 2;\n          }\n        }\n        return result;\n      }\n    }]);\n    return _QrSegment;\n  }();\n  var QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n(function (qrcodegen2) {\n  var QrCode;\n  (function (QrCode2) {\n    var _Ecc = /*#__PURE__*/_createClass(function _Ecc(ordinal, formatBits) {\n      _classCallCheck(this, _Ecc);\n      this.ordinal = ordinal;\n      this.formatBits = formatBits;\n    });\n    var Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n(function (qrcodegen2) {\n  var QrSegment;\n  (function (QrSegment2) {\n    var _Mode = /*#__PURE__*/function () {\n      function _Mode(modeBits, numBitsCharCount) {\n        _classCallCheck(this, _Mode);\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      _createClass(_Mode, [{\n        key: \"numCharCountBits\",\n        value: function numCharCountBits(ver) {\n          return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n        }\n      }]);\n      return _Mode;\n    }();\n    var Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_SIZE = 128;\nvar DEFAULT_LEVEL = \"L\";\nvar DEFAULT_BGCOLOR = \"#FFFFFF\";\nvar DEFAULT_FGCOLOR = \"#000000\";\nvar DEFAULT_INCLUDEMARGIN = false;\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules) {\n  var margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var ops = [];\n  modules.forEach(function (row, y) {\n    var start = null;\n    row.forEach(function (cell, x) {\n      if (!cell && start !== null) {\n        ops.push(\"M\".concat(start + margin, \" \").concat(y + margin, \"h\").concat(x - start, \"v1H\").concat(start + margin, \"z\"));\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(\"M\".concat(x + margin, \",\").concat(y + margin, \" h1v1H\").concat(x + margin, \"z\"));\n        } else {\n          ops.push(\"M\".concat(start + margin, \",\").concat(y + margin, \" h\").concat(x + 1 - start, \"v1H\").concat(start + margin, \"z\"));\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map(function (row, y) {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map(function (cell, x) {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(cells, size, includeMargin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  var margin = includeMargin ? MARGIN_SIZE : 0;\n  var numCells = cells.length + margin * 2;\n  var defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  var scale = numCells / size;\n  var w = (imageSettings.width || defaultSize) * scale;\n  var h = (imageSettings.height || defaultSize) * scale;\n  var x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  var y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  var excavation = null;\n  if (imageSettings.excavate) {\n    var floorX = Math.floor(x);\n    var floorY = Math.floor(y);\n    var ceilW = Math.ceil(w + x - floorX);\n    var ceilH = Math.ceil(h + y - floorY);\n    excavation = {\n      x: floorX,\n      y: floorY,\n      w: ceilW,\n      h: ceilH\n    };\n  }\n  return {\n    x: x,\n    y: y,\n    h: h,\n    w: w,\n    excavation: excavation\n  };\n}\nvar SUPPORTS_PATH2D = function () {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  var _a = props,\n    value = _a.value,\n    _a$size = _a.size,\n    size = _a$size === void 0 ? DEFAULT_SIZE : _a$size,\n    _a$level = _a.level,\n    level = _a$level === void 0 ? DEFAULT_LEVEL : _a$level,\n    _a$bgColor = _a.bgColor,\n    bgColor = _a$bgColor === void 0 ? DEFAULT_BGCOLOR : _a$bgColor,\n    _a$fgColor = _a.fgColor,\n    fgColor = _a$fgColor === void 0 ? DEFAULT_FGCOLOR : _a$fgColor,\n    _a$includeMargin = _a.includeMargin,\n    includeMargin = _a$includeMargin === void 0 ? DEFAULT_INCLUDEMARGIN : _a$includeMargin,\n    style = _a.style,\n    imageSettings = _a.imageSettings,\n    otherProps = __objRest(_a, [\"value\", \"size\", \"level\", \"bgColor\", \"fgColor\", \"includeMargin\", \"style\", \"imageSettings\"]);\n  var imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  var _canvas = useRef(null);\n  var _image = useRef(null);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isImgLoaded = _useState2[0],\n    setIsImageLoaded = _useState2[1];\n  useEffect(function () {\n    if (_canvas.current != null) {\n      var canvas = _canvas.current;\n      var ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      var cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n      var margin = includeMargin ? MARGIN_SIZE : 0;\n      var numCells = cells.length + margin * 2;\n      var calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n      var image = _image.current;\n      var haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      var pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      var scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function (row, rdx) {\n          row.forEach(function (cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  useEffect(function () {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  var canvasStyle = __spreadValues({\n    height: size,\n    width: size\n  }, style);\n  var img = null;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: {\n        display: \"none\"\n      },\n      onLoad: function onLoad() {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nfunction QRCodeSVG(props) {\n  var _a = props,\n    value = _a.value,\n    _a$size2 = _a.size,\n    size = _a$size2 === void 0 ? DEFAULT_SIZE : _a$size2,\n    _a$level2 = _a.level,\n    level = _a$level2 === void 0 ? DEFAULT_LEVEL : _a$level2,\n    _a$bgColor2 = _a.bgColor,\n    bgColor = _a$bgColor2 === void 0 ? DEFAULT_BGCOLOR : _a$bgColor2,\n    _a$fgColor2 = _a.fgColor,\n    fgColor = _a$fgColor2 === void 0 ? DEFAULT_FGCOLOR : _a$fgColor2,\n    _a$includeMargin2 = _a.includeMargin,\n    includeMargin = _a$includeMargin2 === void 0 ? DEFAULT_INCLUDEMARGIN : _a$includeMargin2,\n    imageSettings = _a.imageSettings,\n    otherProps = __objRest(_a, [\"value\", \"size\", \"level\", \"bgColor\", \"fgColor\", \"includeMargin\", \"imageSettings\"]);\n  var cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  var margin = includeMargin ? MARGIN_SIZE : 0;\n  var numCells = cells.length + margin * 2;\n  var calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n  var image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  var fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */React.createElement(\"svg\", __spreadValues({\n    height: size,\n    width: size,\n    viewBox: \"0 0 \".concat(numCells, \" \").concat(numCells)\n  }, otherProps), /* @__PURE__ */React.createElement(\"path\", {\n    fill: bgColor,\n    d: \"M0,0 h\".concat(numCells, \"v\").concat(numCells, \"H0z\"),\n    shapeRendering: \"crispEdges\"\n  }), /* @__PURE__ */React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n}\nvar QRCode = function QRCode(props) {\n  var _a = props,\n    renderAs = _a.renderAs,\n    otherProps = __objRest(_a, [\"renderAs\"]);\n  if (renderAs === \"svg\") {\n    return /* @__PURE__ */React.createElement(QRCodeSVG, __spreadValues({}, otherProps));\n  }\n  return /* @__PURE__ */React.createElement(QRCodeCanvas, __spreadValues({}, otherProps));\n};\nexport { QRCodeCanvas, QRCodeSVG, QRCode as default };","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","React","useRef","useEffect","useState","qrcodegen","qrcodegen2","_QrCode","version","errorCorrectionLevel","dataCodewords","msk","modules","isFunction","MIN_VERSION","MAX_VERSION","RangeError","size","row","i","push","slice","drawFunctionPatterns","allCodewords","addEccAndInterleave","drawCodewords","minPenalty","applyMask","drawFormatBits","penalty","getPenaltyScore","assert","mask","x","y","setFunctionModule","drawFinderPattern","alignPatPos","getAlignmentPatternPositions","numAlign","length","j","drawAlignmentPattern","drawVersion","data","formatBits","rem","bits","getBit","color","Math","floor","dy","dx","dist","max","abs","xx","yy","isDark","ver","ecl","getNumDataCodewords","numBlocks","NUM_ERROR_CORRECTION_BLOCKS","ordinal","blockEccLen","ECC_CODEWORDS_PER_BLOCK","rawCodewords","getNumRawDataModules","numShortBlocks","shortBlockLen","blocks","rsDiv","reedSolomonComputeDivisor","k","dat","ecc","reedSolomonComputeRemainder","concat","result","forEach","block","right","vert","upward","invert","Error","runColor","runX","runHistory","PENALTY_N1","finderPenaltyAddHistory","finderPenaltyCountPatterns","PENALTY_N3","finderPenaltyTerminateAndCount","runY","PENALTY_N2","dark","reduce","sum","total","ceil","PENALTY_N4","step","pos","splice","n","core","currentRunColor","currentRunLength","pop","unshift","text","segs","QrSegment","makeSegments","encodeSegments","seg","makeBytes","minVersion","maxVersion","boostEcl","dataUsedBits","dataCapacityBits2","usedBits","getTotalBits","Ecc","MEDIUM","QUARTILE","HIGH","newEcl","bb","appendBits","mode","modeBits","numChars","numCharCountBits","getData","dataCapacityBits","min","padByte","degree","root","reedSolomonMultiply","divisor","map","_","factor","shift","coef","z","QrCode","val","len","cond","_QrSegment","bitData","Mode","BYTE","digits","isNumeric","parseInt","substr","NUMERIC","isAlphanumeric","temp","ALPHANUMERIC_CHARSET","charAt","ALPHANUMERIC","makeNumeric","makeAlphanumeric","toUtf8ByteArray","assignVal","ECI","NUMERIC_REGEX","test","ALPHANUMERIC_REGEX","ccbits","Infinity","str","encodeURI","charCodeAt","QrCode2","_Ecc","LOW","QrSegment2","_Mode","numBitsCharCount","KANJI","qrcodegen_default","ERROR_LEVEL_MAP","L","M","Q","H","DEFAULT_SIZE","DEFAULT_LEVEL","DEFAULT_BGCOLOR","DEFAULT_FGCOLOR","DEFAULT_INCLUDEMARGIN","MARGIN_SIZE","DEFAULT_IMG_SCALE","generatePath","margin","ops","start","cell","join","excavateModules","excavation","h","w","getImageSettings","cells","includeMargin","imageSettings","numCells","defaultSize","scale","width","height","excavate","floorX","floorY","ceilW","ceilH","SUPPORTS_PATH2D","Path2D","addPath","e","QRCodeCanvas","props","_a","level","bgColor","fgColor","style","otherProps","imgSrc","src","_canvas","_image","isImgLoaded","setIsImageLoaded","current","canvas","ctx","getContext","encodeText","getModules","calculatedImageSettings","image","haveImageToRender","complete","naturalHeight","naturalWidth","pixelRatio","window","devicePixelRatio","fillStyle","fillRect","fill","rdx","cdx","drawImage","canvasStyle","img","createElement","display","onLoad","ref","Fragment","QRCodeSVG","xlinkHref","preserveAspectRatio","fgPath","viewBox","d","shapeRendering","QRCode","renderAs","default"],"sources":["D:/Projects/React/Portfolio/GeneralStore/client/node_modules/qrcode.react/lib/esm/index.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/index.tsx\nimport React, { useRef, useEffect, useState } from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n((qrcodegen2) => {\n  const _QrCode = class {\n    constructor(version, errorCorrectionLevel, dataCodewords, msk) {\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version value out of range\");\n      if (msk < -1 || msk > 7)\n        throw new RangeError(\"Mask value out of range\");\n      this.size = version * 4 + 17;\n      let row = [];\n      for (let i = 0; i < this.size; i++)\n        row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      const allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        let minPenalty = 1e9;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    static encodeText(text, ecl) {\n      const segs = qrcodegen2.QrSegment.makeSegments(text);\n      return _QrCode.encodeSegments(segs, ecl);\n    }\n    static encodeBinary(data, ecl) {\n      const seg = qrcodegen2.QrSegment.makeBytes(data);\n      return _QrCode.encodeSegments([seg], ecl);\n    }\n    static encodeSegments(segs, ecl, minVersion = 1, maxVersion = 40, mask = -1, boostEcl = true) {\n      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7)\n        throw new RangeError(\"Invalid value\");\n      let version;\n      let dataUsedBits;\n      for (version = minVersion; ; version++) {\n        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        const usedBits = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits2) {\n          dataUsedBits = usedBits;\n          break;\n        }\n        if (version >= maxVersion)\n          throw new RangeError(\"Data too long\");\n      }\n      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {\n        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8)\n          ecl = newEcl;\n      }\n      let bb = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData())\n          bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - bb.length % 8) % 8, bb);\n      assert(bb.length % 8 == 0);\n      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17)\n        appendBits(padByte, 8, bb);\n      let dataCodewords = [];\n      while (dataCodewords.length * 8 < bb.length)\n        dataCodewords.push(0);\n      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));\n      return new _QrCode(version, ecl, dataCodewords, mask);\n    }\n    getModule(x, y) {\n      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n    }\n    getModules() {\n      return this.modules;\n    }\n    drawFunctionPatterns() {\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n      const alignPatPos = this.getAlignmentPatternPositions();\n      const numAlign = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\n            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n      this.drawFormatBits(0);\n      this.drawVersion();\n    }\n    drawFormatBits(mask) {\n      const data = this.errorCorrectionLevel.formatBits << 3 | mask;\n      let rem = data;\n      for (let i = 0; i < 10; i++)\n        rem = rem << 1 ^ (rem >>> 9) * 1335;\n      const bits = (data << 10 | rem) ^ 21522;\n      assert(bits >>> 15 == 0);\n      for (let i = 0; i <= 5; i++)\n        this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++)\n        this.setFunctionModule(14 - i, 8, getBit(bits, i));\n      for (let i = 0; i < 8; i++)\n        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++)\n        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true);\n    }\n    drawVersion() {\n      if (this.version < 7)\n        return;\n      let rem = this.version;\n      for (let i = 0; i < 12; i++)\n        rem = rem << 1 ^ (rem >>> 11) * 7973;\n      const bits = this.version << 12 | rem;\n      assert(bits >>> 18 == 0);\n      for (let i = 0; i < 18; i++) {\n        const color = getBit(bits, i);\n        const a = this.size - 11 + i % 3;\n        const b = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n    drawFinderPattern(x, y) {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist = Math.max(Math.abs(dx), Math.abs(dy));\n          const xx = x + dx;\n          const yy = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\n            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n    drawAlignmentPattern(x, y) {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++)\n          this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n      }\n    }\n    setFunctionModule(x, y, isDark) {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n    addEccAndInterleave(data) {\n      const ver = this.version;\n      const ecl = this.errorCorrectionLevel;\n      if (data.length != _QrCode.getNumDataCodewords(ver, ecl))\n        throw new RangeError(\"Invalid argument\");\n      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n      const numShortBlocks = numBlocks - rawCodewords % numBlocks;\n      const shortBlockLen = Math.floor(rawCodewords / numBlocks);\n      let blocks = [];\n      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n        k += dat.length;\n        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks)\n          dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n      let result = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n            result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n    drawCodewords(data) {\n      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8))\n        throw new RangeError(\"Invalid argument\");\n      let i = 0;\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        if (right == 6)\n          right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          for (let j = 0; j < 2; j++) {\n            const x = right - j;\n            const upward = (right + 1 & 2) == 0;\n            const y = upward ? this.size - 1 - vert : vert;\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n    applyMask(mask) {\n      if (mask < 0 || mask > 7)\n        throw new RangeError(\"Mask value out of range\");\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = x * y % 2 + x * y % 3 == 0;\n              break;\n            case 6:\n              invert = (x * y % 2 + x * y % 3) % 2 == 0;\n              break;\n            case 7:\n              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n              break;\n            default:\n              throw new Error(\"Unreachable\");\n          }\n          if (!this.isFunction[y][x] && invert)\n            this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n    getPenaltyScore() {\n      let result = 0;\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runX > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runY > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color = this.modules[y][x];\n          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1])\n            result += _QrCode.PENALTY_N2;\n        }\n      }\n      let dark = 0;\n      for (const row of this.modules)\n        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total = this.size * this.size;\n      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * _QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888);\n      return result;\n    }\n    getAlignmentPatternPositions() {\n      if (this.version == 1)\n        return [];\n      else {\n        const numAlign = Math.floor(this.version / 7) + 2;\n        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step)\n          result.splice(1, 0, pos);\n        return result;\n      }\n    }\n    static getNumRawDataModules(ver) {\n      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version number out of range\");\n      let result = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7)\n          result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n    static getNumDataCodewords(ver, ecl) {\n      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n    }\n    static reedSolomonComputeDivisor(degree) {\n      if (degree < 1 || degree > 255)\n        throw new RangeError(\"Degree out of range\");\n      let result = [];\n      for (let i = 0; i < degree - 1; i++)\n        result.push(0);\n      result.push(1);\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        for (let j = 0; j < result.length; j++) {\n          result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length)\n            result[j] ^= result[j + 1];\n        }\n        root = _QrCode.reedSolomonMultiply(root, 2);\n      }\n      return result;\n    }\n    static reedSolomonComputeRemainder(data, divisor) {\n      let result = divisor.map((_) => 0);\n      for (const b of data) {\n        const factor = b ^ result.shift();\n        result.push(0);\n        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));\n      }\n      return result;\n    }\n    static reedSolomonMultiply(x, y) {\n      if (x >>> 8 != 0 || y >>> 8 != 0)\n        throw new RangeError(\"Byte out of range\");\n      let z = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = z << 1 ^ (z >>> 7) * 285;\n        z ^= (y >>> i & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z;\n    }\n    finderPenaltyCountPatterns(runHistory) {\n      const n = runHistory[1];\n      assert(n <= this.size * 3);\n      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n    }\n    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n      if (currentRunColor) {\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size;\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n    finderPenaltyAddHistory(currentRunLength, runHistory) {\n      if (runHistory[0] == 0)\n        currentRunLength += this.size;\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n  };\n  let QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [\n    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\n    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]\n  ];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [\n    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\n    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\n    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\n    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]\n  ];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0)\n      throw new RangeError(\"Value out of range\");\n    for (let i = len - 1; i >= 0; i--)\n      bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond)\n      throw new Error(\"Assertion error\");\n  }\n  const _QrSegment = class {\n    constructor(mode, numChars, bitData) {\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0)\n        throw new RangeError(\"Invalid argument\");\n      this.bitData = bitData.slice();\n    }\n    static makeBytes(data) {\n      let bb = [];\n      for (const b of data)\n        appendBits(b, 8, bb);\n      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n    }\n    static makeNumeric(digits) {\n      if (!_QrSegment.isNumeric(digits))\n        throw new RangeError(\"String contains non-numeric characters\");\n      let bb = [];\n      for (let i = 0; i < digits.length; ) {\n        const n = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n    static makeAlphanumeric(text) {\n      if (!_QrSegment.isAlphanumeric(text))\n        throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");\n      let bb = [];\n      let i;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length)\n        appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n    static makeSegments(text) {\n      if (text == \"\")\n        return [];\n      else if (_QrSegment.isNumeric(text))\n        return [_QrSegment.makeNumeric(text)];\n      else if (_QrSegment.isAlphanumeric(text))\n        return [_QrSegment.makeAlphanumeric(text)];\n      else\n        return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n    }\n    static makeEci(assignVal) {\n      let bb = [];\n      if (assignVal < 0)\n        throw new RangeError(\"ECI assignment value out of range\");\n      else if (assignVal < 1 << 7)\n        appendBits(assignVal, 8, bb);\n      else if (assignVal < 1 << 14) {\n        appendBits(2, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1e6) {\n        appendBits(6, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else\n        throw new RangeError(\"ECI assignment value out of range\");\n      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n    }\n    static isNumeric(text) {\n      return _QrSegment.NUMERIC_REGEX.test(text);\n    }\n    static isAlphanumeric(text) {\n      return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n    getData() {\n      return this.bitData.slice();\n    }\n    static getTotalBits(segs, version) {\n      let result = 0;\n      for (const seg of segs) {\n        const ccbits = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits)\n          return Infinity;\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n    static toUtf8ByteArray(str) {\n      str = encodeURI(str);\n      let result = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != \"%\")\n          result.push(str.charCodeAt(i));\n        else {\n          result.push(parseInt(str.substr(i + 1, 2), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n  };\n  let QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrCode;\n  ((QrCode2) => {\n    const _Ecc = class {\n      constructor(ordinal, formatBits) {\n        this.ordinal = ordinal;\n        this.formatBits = formatBits;\n      }\n    };\n    let Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrSegment;\n  ((QrSegment2) => {\n    const _Mode = class {\n      constructor(modeBits, numBitsCharCount) {\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      numCharCountBits(ver) {\n        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n      }\n    };\n    let Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_SIZE = 128;\nvar DEFAULT_LEVEL = \"L\";\nvar DEFAULT_BGCOLOR = \"#FFFFFF\";\nvar DEFAULT_FGCOLOR = \"#000000\";\nvar DEFAULT_INCLUDEMARGIN = false;\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules, margin = 0) {\n  const ops = [];\n  modules.forEach(function(row, y) {\n    let start = null;\n    row.forEach(function(cell, x) {\n      if (!cell && start !== null) {\n        ops.push(`M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`);\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);\n        } else {\n          ops.push(`M${start + margin},${y + margin} h${x + 1 - start}v1H${start + margin}z`);\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map((row, y) => {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map((cell, x) => {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(cells, size, includeMargin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  const scale = numCells / size;\n  const w = (imageSettings.width || defaultSize) * scale;\n  const h = (imageSettings.height || defaultSize) * scale;\n  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  let excavation = null;\n  if (imageSettings.excavate) {\n    let floorX = Math.floor(x);\n    let floorY = Math.floor(y);\n    let ceilW = Math.ceil(w + x - floorX);\n    let ceilH = Math.ceil(h + y - floorY);\n    excavation = { x: floorX, y: floorY, w: ceilW, h: ceilH };\n  }\n  return { x, y, h, w, excavation };\n}\nvar SUPPORTS_PATH2D = function() {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    style,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"style\",\n    \"imageSettings\"\n  ]);\n  const imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  const _canvas = useRef(null);\n  const _image = useRef(null);\n  const [isImgLoaded, setIsImageLoaded] = useState(false);\n  useEffect(() => {\n    if (_canvas.current != null) {\n      const canvas = _canvas.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n      const margin = includeMargin ? MARGIN_SIZE : 0;\n      const numCells = cells.length + margin * 2;\n      const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n      const image = _image.current;\n      const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      const pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      const scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function(row, rdx) {\n          row.forEach(function(cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  useEffect(() => {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  const canvasStyle = __spreadValues({ height: size, width: size }, style);\n  let img = null;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */ React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: { display: \"none\" },\n      onLoad: () => {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nfunction QRCodeSVG(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"imageSettings\"\n  ]);\n  let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n  let image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */ React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  const fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */ React.createElement(\"svg\", __spreadValues({\n    height: size,\n    width: size,\n    viewBox: `0 0 ${numCells} ${numCells}`\n  }, otherProps), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: bgColor,\n    d: `M0,0 h${numCells}v${numCells}H0z`,\n    shapeRendering: \"crispEdges\"\n  }), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n}\nvar QRCode = (props) => {\n  const _a = props, { renderAs } = _a, otherProps = __objRest(_a, [\"renderAs\"]);\n  if (renderAs === \"svg\") {\n    return /* @__PURE__ */ React.createElement(QRCodeSVG, __spreadValues({}, otherProps));\n  }\n  return /* @__PURE__ */ React.createElement(QRCodeCanvas, __spreadValues({}, otherProps));\n};\nexport {\n  QRCodeCanvas,\n  QRCodeSVG,\n  QRCode as default\n};\n"],"mappings":";;;;AAAA,IAAIA,SAAS,GAAGC,MAAM,CAACC,cAAc;AACrC,IAAIC,mBAAmB,GAAGF,MAAM,CAACG,qBAAqB;AACtD,IAAIC,YAAY,GAAGJ,MAAM,CAACK,SAAS,CAACC,cAAc;AAClD,IAAIC,YAAY,GAAGP,MAAM,CAACK,SAAS,CAACG,oBAAoB;AACxD,IAAIC,eAAe,GAAG,SAAlBA,eAAe,CAAIC,GAAG,EAAEC,GAAG,EAAEC,KAAK;EAAA,OAAKD,GAAG,IAAID,GAAG,GAAGX,SAAS,CAACW,GAAG,EAAEC,GAAG,EAAE;IAAEE,UAAU,EAAE,IAAI;IAAEC,YAAY,EAAE,IAAI;IAAEC,QAAQ,EAAE,IAAI;IAAEH,KAAK,EAALA;EAAM,CAAC,CAAC,GAAGF,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;AAAA;AAC/J,IAAII,cAAc,GAAG,SAAjBA,cAAc,CAAIC,CAAC,EAAEC,CAAC,EAAK;EAC7B,KAAK,IAAIC,IAAI,IAAID,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAAC,EAC5B,IAAId,YAAY,CAACgB,IAAI,CAACF,CAAC,EAAEC,IAAI,CAAC,EAC5BV,eAAe,CAACQ,CAAC,EAAEE,IAAI,EAAED,CAAC,CAACC,IAAI,CAAC,CAAC;EACrC,IAAIjB,mBAAmB;IAAA,2CACJA,mBAAmB,CAACgB,CAAC,CAAC;MAAA;IAAA;MAAvC,oDAAyC;QAAA,IAAhCC,IAAI;QACX,IAAIZ,YAAY,CAACa,IAAI,CAACF,CAAC,EAAEC,IAAI,CAAC,EAC5BV,eAAe,CAACQ,CAAC,EAAEE,IAAI,EAAED,CAAC,CAACC,IAAI,CAAC,CAAC;MACrC;IAAC;MAAA;IAAA;MAAA;IAAA;EAAA;EACH,OAAOF,CAAC;AACV,CAAC;AACD,IAAII,SAAS,GAAG,SAAZA,SAAS,CAAIC,MAAM,EAAEC,OAAO,EAAK;EACnC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,KAAK,IAAIL,IAAI,IAAIG,MAAM,EACrB,IAAIlB,YAAY,CAACgB,IAAI,CAACE,MAAM,EAAEH,IAAI,CAAC,IAAII,OAAO,CAACE,OAAO,CAACN,IAAI,CAAC,GAAG,CAAC,EAC9DK,MAAM,CAACL,IAAI,CAAC,GAAGG,MAAM,CAACH,IAAI,CAAC;EAC/B,IAAIG,MAAM,IAAI,IAAI,IAAIpB,mBAAmB;IAAA,4CACtBA,mBAAmB,CAACoB,MAAM,CAAC;MAAA;IAAA;MAA5C,uDAA8C;QAAA,IAArCH,IAAI;QACX,IAAII,OAAO,CAACE,OAAO,CAACN,IAAI,CAAC,GAAG,CAAC,IAAIZ,YAAY,CAACa,IAAI,CAACE,MAAM,EAAEH,IAAI,CAAC,EAC9DK,MAAM,CAACL,IAAI,CAAC,GAAGG,MAAM,CAACH,IAAI,CAAC;MAC/B;IAAC;MAAA;IAAA;MAAA;IAAA;EAAA;EACH,OAAOK,MAAM;AACf,CAAC;;AAED;AACA,OAAOE,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,SAAS;AACb,CAAC,UAACC,UAAU,EAAK;EACf,IAAMC,OAAO;IACX,iBAAYC,OAAO,EAAEC,oBAAoB,EAAEC,aAAa,EAAEC,GAAG,EAAE;MAAA;MAC7D,IAAI,CAACH,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACC,oBAAoB,GAAGA,oBAAoB;MAChD,IAAI,CAACG,OAAO,GAAG,EAAE;MACjB,IAAI,CAACC,UAAU,GAAG,EAAE;MACpB,IAAIL,OAAO,GAAGD,OAAO,CAACO,WAAW,IAAIN,OAAO,GAAGD,OAAO,CAACQ,WAAW,EAChE,MAAM,IAAIC,UAAU,CAAC,4BAA4B,CAAC;MACpD,IAAIL,GAAG,GAAG,CAAC,CAAC,IAAIA,GAAG,GAAG,CAAC,EACrB,MAAM,IAAIK,UAAU,CAAC,yBAAyB,CAAC;MACjD,IAAI,CAACC,IAAI,GAAGT,OAAO,GAAG,CAAC,GAAG,EAAE;MAC5B,IAAIU,GAAG,GAAG,EAAE;MACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACF,IAAI,EAAEE,CAAC,EAAE,EAChCD,GAAG,CAACE,IAAI,CAAC,KAAK,CAAC;MACjB,KAAK,IAAID,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG,IAAI,CAACF,IAAI,EAAEE,EAAC,EAAE,EAAE;QAClC,IAAI,CAACP,OAAO,CAACQ,IAAI,CAACF,GAAG,CAACG,KAAK,EAAE,CAAC;QAC9B,IAAI,CAACR,UAAU,CAACO,IAAI,CAACF,GAAG,CAACG,KAAK,EAAE,CAAC;MACnC;MACA,IAAI,CAACC,oBAAoB,EAAE;MAC3B,IAAMC,YAAY,GAAG,IAAI,CAACC,mBAAmB,CAACd,aAAa,CAAC;MAC5D,IAAI,CAACe,aAAa,CAACF,YAAY,CAAC;MAChC,IAAIZ,GAAG,IAAI,CAAC,CAAC,EAAE;QACb,IAAIe,UAAU,GAAG,GAAG;QACpB,KAAK,IAAIP,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,CAAC,EAAEA,GAAC,EAAE,EAAE;UAC1B,IAAI,CAACQ,SAAS,CAACR,GAAC,CAAC;UACjB,IAAI,CAACS,cAAc,CAACT,GAAC,CAAC;UACtB,IAAMU,OAAO,GAAG,IAAI,CAACC,eAAe,EAAE;UACtC,IAAID,OAAO,GAAGH,UAAU,EAAE;YACxBf,GAAG,GAAGQ,GAAC;YACPO,UAAU,GAAGG,OAAO;UACtB;UACA,IAAI,CAACF,SAAS,CAACR,GAAC,CAAC;QACnB;MACF;MACAY,MAAM,CAAC,CAAC,IAAIpB,GAAG,IAAIA,GAAG,IAAI,CAAC,CAAC;MAC5B,IAAI,CAACqB,IAAI,GAAGrB,GAAG;MACf,IAAI,CAACgB,SAAS,CAAChB,GAAG,CAAC;MACnB,IAAI,CAACiB,cAAc,CAACjB,GAAG,CAAC;MACxB,IAAI,CAACE,UAAU,GAAG,EAAE;IACtB;IAAC;MAAA;MAAA,OAiDD,mBAAUoB,CAAC,EAAEC,CAAC,EAAE;QACd,OAAO,CAAC,IAAID,CAAC,IAAIA,CAAC,GAAG,IAAI,CAAChB,IAAI,IAAI,CAAC,IAAIiB,CAAC,IAAIA,CAAC,GAAG,IAAI,CAACjB,IAAI,IAAI,IAAI,CAACL,OAAO,CAACsB,CAAC,CAAC,CAACD,CAAC,CAAC;MACjF;IAAC;MAAA;MAAA,OACD,sBAAa;QACX,OAAO,IAAI,CAACrB,OAAO;MACrB;IAAC;MAAA;MAAA,OACD,gCAAuB;QACrB,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACF,IAAI,EAAEE,CAAC,EAAE,EAAE;UAClC,IAAI,CAACgB,iBAAiB,CAAC,CAAC,EAAEhB,CAAC,EAAEA,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;UACxC,IAAI,CAACgB,iBAAiB,CAAChB,CAAC,EAAE,CAAC,EAAEA,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC1C;QACA,IAAI,CAACiB,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC;QAC5B,IAAI,CAACA,iBAAiB,CAAC,IAAI,CAACnB,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;QACxC,IAAI,CAACmB,iBAAiB,CAAC,CAAC,EAAE,IAAI,CAACnB,IAAI,GAAG,CAAC,CAAC;QACxC,IAAMoB,WAAW,GAAG,IAAI,CAACC,4BAA4B,EAAE;QACvD,IAAMC,QAAQ,GAAGF,WAAW,CAACG,MAAM;QACnC,KAAK,IAAIrB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGoB,QAAQ,EAAEpB,GAAC,EAAE,EAAE;UACjC,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,EAAEE,CAAC,EAAE,EAAE;YACjC,IAAI,EAAEtB,GAAC,IAAI,CAAC,IAAIsB,CAAC,IAAI,CAAC,IAAItB,GAAC,IAAI,CAAC,IAAIsB,CAAC,IAAIF,QAAQ,GAAG,CAAC,IAAIpB,GAAC,IAAIoB,QAAQ,GAAG,CAAC,IAAIE,CAAC,IAAI,CAAC,CAAC,EACnF,IAAI,CAACC,oBAAoB,CAACL,WAAW,CAAClB,GAAC,CAAC,EAAEkB,WAAW,CAACI,CAAC,CAAC,CAAC;UAC7D;QACF;QACA,IAAI,CAACb,cAAc,CAAC,CAAC,CAAC;QACtB,IAAI,CAACe,WAAW,EAAE;MACpB;IAAC;MAAA;MAAA,OACD,wBAAeX,IAAI,EAAE;QACnB,IAAMY,IAAI,GAAG,IAAI,CAACnC,oBAAoB,CAACoC,UAAU,IAAI,CAAC,GAAGb,IAAI;QAC7D,IAAIc,GAAG,GAAGF,IAAI;QACd,KAAK,IAAIzB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzB2B,GAAG,GAAGA,GAAG,IAAI,CAAC,GAAG,CAACA,GAAG,KAAK,CAAC,IAAI,IAAI;QACrC,IAAMC,IAAI,GAAG,CAACH,IAAI,IAAI,EAAE,GAAGE,GAAG,IAAI,KAAK;QACvCf,MAAM,CAACgB,IAAI,KAAK,EAAE,IAAI,CAAC,CAAC;QACxB,KAAK,IAAI5B,GAAC,GAAG,CAAC,EAAEA,GAAC,IAAI,CAAC,EAAEA,GAAC,EAAE,EACzB,IAAI,CAACgB,iBAAiB,CAAC,CAAC,EAAEhB,GAAC,EAAE6B,MAAM,CAACD,IAAI,EAAE5B,GAAC,CAAC,CAAC;QAC/C,IAAI,CAACgB,iBAAiB,CAAC,CAAC,EAAE,CAAC,EAAEa,MAAM,CAACD,IAAI,EAAE,CAAC,CAAC,CAAC;QAC7C,IAAI,CAACZ,iBAAiB,CAAC,CAAC,EAAE,CAAC,EAAEa,MAAM,CAACD,IAAI,EAAE,CAAC,CAAC,CAAC;QAC7C,IAAI,CAACZ,iBAAiB,CAAC,CAAC,EAAE,CAAC,EAAEa,MAAM,CAACD,IAAI,EAAE,CAAC,CAAC,CAAC;QAC7C,KAAK,IAAI5B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,EAAE,EAAEA,GAAC,EAAE,EACzB,IAAI,CAACgB,iBAAiB,CAAC,EAAE,GAAGhB,GAAC,EAAE,CAAC,EAAE6B,MAAM,CAACD,IAAI,EAAE5B,GAAC,CAAC,CAAC;QACpD,KAAK,IAAIA,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,CAAC,EAAEA,GAAC,EAAE,EACxB,IAAI,CAACgB,iBAAiB,CAAC,IAAI,CAAClB,IAAI,GAAG,CAAC,GAAGE,GAAC,EAAE,CAAC,EAAE6B,MAAM,CAACD,IAAI,EAAE5B,GAAC,CAAC,CAAC;QAC/D,KAAK,IAAIA,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,EAAE,EAAEA,GAAC,EAAE,EACzB,IAAI,CAACgB,iBAAiB,CAAC,CAAC,EAAE,IAAI,CAAClB,IAAI,GAAG,EAAE,GAAGE,GAAC,EAAE6B,MAAM,CAACD,IAAI,EAAE5B,GAAC,CAAC,CAAC;QAChE,IAAI,CAACgB,iBAAiB,CAAC,CAAC,EAAE,IAAI,CAAClB,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC;MAChD;IAAC;MAAA;MAAA,OACD,uBAAc;QACZ,IAAI,IAAI,CAACT,OAAO,GAAG,CAAC,EAClB;QACF,IAAIsC,GAAG,GAAG,IAAI,CAACtC,OAAO;QACtB,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzB2B,GAAG,GAAGA,GAAG,IAAI,CAAC,GAAG,CAACA,GAAG,KAAK,EAAE,IAAI,IAAI;QACtC,IAAMC,IAAI,GAAG,IAAI,CAACvC,OAAO,IAAI,EAAE,GAAGsC,GAAG;QACrCf,MAAM,CAACgB,IAAI,KAAK,EAAE,IAAI,CAAC,CAAC;QACxB,KAAK,IAAI5B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,EAAE,EAAEA,GAAC,EAAE,EAAE;UAC3B,IAAM8B,KAAK,GAAGD,MAAM,CAACD,IAAI,EAAE5B,GAAC,CAAC;UAC7B,IAAM3B,CAAC,GAAG,IAAI,CAACyB,IAAI,GAAG,EAAE,GAAGE,GAAC,GAAG,CAAC;UAChC,IAAM1B,CAAC,GAAGyD,IAAI,CAACC,KAAK,CAAChC,GAAC,GAAG,CAAC,CAAC;UAC3B,IAAI,CAACgB,iBAAiB,CAAC3C,CAAC,EAAEC,CAAC,EAAEwD,KAAK,CAAC;UACnC,IAAI,CAACd,iBAAiB,CAAC1C,CAAC,EAAED,CAAC,EAAEyD,KAAK,CAAC;QACrC;MACF;IAAC;MAAA;MAAA,OACD,2BAAkBhB,CAAC,EAAEC,CAAC,EAAE;QACtB,KAAK,IAAIkB,EAAE,GAAG,CAAC,CAAC,EAAEA,EAAE,IAAI,CAAC,EAAEA,EAAE,EAAE,EAAE;UAC/B,KAAK,IAAIC,EAAE,GAAG,CAAC,CAAC,EAAEA,EAAE,IAAI,CAAC,EAAEA,EAAE,EAAE,EAAE;YAC/B,IAAMC,IAAI,GAAGJ,IAAI,CAACK,GAAG,CAACL,IAAI,CAACM,GAAG,CAACH,EAAE,CAAC,EAAEH,IAAI,CAACM,GAAG,CAACJ,EAAE,CAAC,CAAC;YACjD,IAAMK,EAAE,GAAGxB,CAAC,GAAGoB,EAAE;YACjB,IAAMK,EAAE,GAAGxB,CAAC,GAAGkB,EAAE;YACjB,IAAI,CAAC,IAAIK,EAAE,IAAIA,EAAE,GAAG,IAAI,CAACxC,IAAI,IAAI,CAAC,IAAIyC,EAAE,IAAIA,EAAE,GAAG,IAAI,CAACzC,IAAI,EACxD,IAAI,CAACkB,iBAAiB,CAACsB,EAAE,EAAEC,EAAE,EAAEJ,IAAI,IAAI,CAAC,IAAIA,IAAI,IAAI,CAAC,CAAC;UAC1D;QACF;MACF;IAAC;MAAA;MAAA,OACD,8BAAqBrB,CAAC,EAAEC,CAAC,EAAE;QACzB,KAAK,IAAIkB,EAAE,GAAG,CAAC,CAAC,EAAEA,EAAE,IAAI,CAAC,EAAEA,EAAE,EAAE,EAAE;UAC/B,KAAK,IAAIC,EAAE,GAAG,CAAC,CAAC,EAAEA,EAAE,IAAI,CAAC,EAAEA,EAAE,EAAE,EAC7B,IAAI,CAAClB,iBAAiB,CAACF,CAAC,GAAGoB,EAAE,EAAEnB,CAAC,GAAGkB,EAAE,EAAEF,IAAI,CAACK,GAAG,CAACL,IAAI,CAACM,GAAG,CAACH,EAAE,CAAC,EAAEH,IAAI,CAACM,GAAG,CAACJ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;QACrF;MACF;IAAC;MAAA;MAAA,OACD,2BAAkBnB,CAAC,EAAEC,CAAC,EAAEyB,MAAM,EAAE;QAC9B,IAAI,CAAC/C,OAAO,CAACsB,CAAC,CAAC,CAACD,CAAC,CAAC,GAAG0B,MAAM;QAC3B,IAAI,CAAC9C,UAAU,CAACqB,CAAC,CAAC,CAACD,CAAC,CAAC,GAAG,IAAI;MAC9B;IAAC;MAAA;MAAA,OACD,6BAAoBW,IAAI,EAAE;QACxB,IAAMgB,GAAG,GAAG,IAAI,CAACpD,OAAO;QACxB,IAAMqD,GAAG,GAAG,IAAI,CAACpD,oBAAoB;QACrC,IAAImC,IAAI,CAACJ,MAAM,IAAIjC,OAAO,CAACuD,mBAAmB,CAACF,GAAG,EAAEC,GAAG,CAAC,EACtD,MAAM,IAAI7C,UAAU,CAAC,kBAAkB,CAAC;QAC1C,IAAM+C,SAAS,GAAGxD,OAAO,CAACyD,2BAA2B,CAACH,GAAG,CAACI,OAAO,CAAC,CAACL,GAAG,CAAC;QACvE,IAAMM,WAAW,GAAG3D,OAAO,CAAC4D,uBAAuB,CAACN,GAAG,CAACI,OAAO,CAAC,CAACL,GAAG,CAAC;QACrE,IAAMQ,YAAY,GAAGlB,IAAI,CAACC,KAAK,CAAC5C,OAAO,CAAC8D,oBAAoB,CAACT,GAAG,CAAC,GAAG,CAAC,CAAC;QACtE,IAAMU,cAAc,GAAGP,SAAS,GAAGK,YAAY,GAAGL,SAAS;QAC3D,IAAMQ,aAAa,GAAGrB,IAAI,CAACC,KAAK,CAACiB,YAAY,GAAGL,SAAS,CAAC;QAC1D,IAAIS,MAAM,GAAG,EAAE;QACf,IAAMC,KAAK,GAAGlE,OAAO,CAACmE,yBAAyB,CAACR,WAAW,CAAC;QAC5D,KAAK,IAAI/C,CAAC,GAAG,CAAC,EAAEwD,CAAC,GAAG,CAAC,EAAExD,CAAC,GAAG4C,SAAS,EAAE5C,CAAC,EAAE,EAAE;UACzC,IAAIyD,GAAG,GAAGhC,IAAI,CAACvB,KAAK,CAACsD,CAAC,EAAEA,CAAC,GAAGJ,aAAa,GAAGL,WAAW,IAAI/C,CAAC,GAAGmD,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;UACvFK,CAAC,IAAIC,GAAG,CAACpC,MAAM;UACf,IAAMqC,GAAG,GAAGtE,OAAO,CAACuE,2BAA2B,CAACF,GAAG,EAAEH,KAAK,CAAC;UAC3D,IAAItD,CAAC,GAAGmD,cAAc,EACpBM,GAAG,CAACxD,IAAI,CAAC,CAAC,CAAC;UACboD,MAAM,CAACpD,IAAI,CAACwD,GAAG,CAACG,MAAM,CAACF,GAAG,CAAC,CAAC;QAC9B;QACA,IAAIG,MAAM,GAAG,EAAE;QAAC,8BAC2B;UACzCR,MAAM,CAACS,OAAO,CAAC,UAACC,KAAK,EAAEzC,CAAC,EAAK;YAC3B,IAAItB,CAAC,IAAIoD,aAAa,GAAGL,WAAW,IAAIzB,CAAC,IAAI6B,cAAc,EACzDU,MAAM,CAAC5D,IAAI,CAAC8D,KAAK,CAAC/D,CAAC,CAAC,CAAC;UACzB,CAAC,CAAC;QACJ,CAAC;QALD,KAAK,IAAIA,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGqD,MAAM,CAAC,CAAC,CAAC,CAAChC,MAAM,EAAErB,GAAC,EAAE;UAAA;QAAA;QAMzCY,MAAM,CAACiD,MAAM,CAACxC,MAAM,IAAI4B,YAAY,CAAC;QACrC,OAAOY,MAAM;MACf;IAAC;MAAA;MAAA,OACD,uBAAcpC,IAAI,EAAE;QAClB,IAAIA,IAAI,CAACJ,MAAM,IAAIU,IAAI,CAACC,KAAK,CAAC5C,OAAO,CAAC8D,oBAAoB,CAAC,IAAI,CAAC7D,OAAO,CAAC,GAAG,CAAC,CAAC,EAC3E,MAAM,IAAIQ,UAAU,CAAC,kBAAkB,CAAC;QAC1C,IAAIG,CAAC,GAAG,CAAC;QACT,KAAK,IAAIgE,KAAK,GAAG,IAAI,CAAClE,IAAI,GAAG,CAAC,EAAEkE,KAAK,IAAI,CAAC,EAAEA,KAAK,IAAI,CAAC,EAAE;UACtD,IAAIA,KAAK,IAAI,CAAC,EACZA,KAAK,GAAG,CAAC;UACX,KAAK,IAAIC,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,IAAI,CAACnE,IAAI,EAAEmE,IAAI,EAAE,EAAE;YAC3C,KAAK,IAAI3C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;cAC1B,IAAMR,CAAC,GAAGkD,KAAK,GAAG1C,CAAC;cACnB,IAAM4C,MAAM,GAAG,CAACF,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC;cACnC,IAAMjD,CAAC,GAAGmD,MAAM,GAAG,IAAI,CAACpE,IAAI,GAAG,CAAC,GAAGmE,IAAI,GAAGA,IAAI;cAC9C,IAAI,CAAC,IAAI,CAACvE,UAAU,CAACqB,CAAC,CAAC,CAACD,CAAC,CAAC,IAAId,CAAC,GAAGyB,IAAI,CAACJ,MAAM,GAAG,CAAC,EAAE;gBACjD,IAAI,CAAC5B,OAAO,CAACsB,CAAC,CAAC,CAACD,CAAC,CAAC,GAAGe,MAAM,CAACJ,IAAI,CAACzB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvDA,CAAC,EAAE;cACL;YACF;UACF;QACF;QACAY,MAAM,CAACZ,CAAC,IAAIyB,IAAI,CAACJ,MAAM,GAAG,CAAC,CAAC;MAC9B;IAAC;MAAA;MAAA,OACD,mBAAUR,IAAI,EAAE;QACd,IAAIA,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAG,CAAC,EACtB,MAAM,IAAIhB,UAAU,CAAC,yBAAyB,CAAC;QACjD,KAAK,IAAIkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACjB,IAAI,EAAEiB,CAAC,EAAE,EAAE;UAClC,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAChB,IAAI,EAAEgB,CAAC,EAAE,EAAE;YAClC,IAAIqD,MAAM;YACV,QAAQtD,IAAI;cACV,KAAK,CAAC;gBACJsD,MAAM,GAAG,CAACrD,CAAC,GAAGC,CAAC,IAAI,CAAC,IAAI,CAAC;gBACzB;cACF,KAAK,CAAC;gBACJoD,MAAM,GAAGpD,CAAC,GAAG,CAAC,IAAI,CAAC;gBACnB;cACF,KAAK,CAAC;gBACJoD,MAAM,GAAGrD,CAAC,GAAG,CAAC,IAAI,CAAC;gBACnB;cACF,KAAK,CAAC;gBACJqD,MAAM,GAAG,CAACrD,CAAC,GAAGC,CAAC,IAAI,CAAC,IAAI,CAAC;gBACzB;cACF,KAAK,CAAC;gBACJoD,MAAM,GAAG,CAACpC,IAAI,CAACC,KAAK,CAAClB,CAAC,GAAG,CAAC,CAAC,GAAGiB,IAAI,CAACC,KAAK,CAACjB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;gBACzD;cACF,KAAK,CAAC;gBACJoD,MAAM,GAAGrD,CAAC,GAAGC,CAAC,GAAG,CAAC,GAAGD,CAAC,GAAGC,CAAC,GAAG,CAAC,IAAI,CAAC;gBACnC;cACF,KAAK,CAAC;gBACJoD,MAAM,GAAG,CAACrD,CAAC,GAAGC,CAAC,GAAG,CAAC,GAAGD,CAAC,GAAGC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;gBACzC;cACF,KAAK,CAAC;gBACJoD,MAAM,GAAG,CAAC,CAACrD,CAAC,GAAGC,CAAC,IAAI,CAAC,GAAGD,CAAC,GAAGC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC3C;cACF;gBACE,MAAM,IAAIqD,KAAK,CAAC,aAAa,CAAC;YAAC;YAEnC,IAAI,CAAC,IAAI,CAAC1E,UAAU,CAACqB,CAAC,CAAC,CAACD,CAAC,CAAC,IAAIqD,MAAM,EAClC,IAAI,CAAC1E,OAAO,CAACsB,CAAC,CAAC,CAACD,CAAC,CAAC,GAAG,CAAC,IAAI,CAACrB,OAAO,CAACsB,CAAC,CAAC,CAACD,CAAC,CAAC;UAC5C;QACF;MACF;IAAC;MAAA;MAAA,OACD,2BAAkB;QAChB,IAAI+C,MAAM,GAAG,CAAC;QACd,KAAK,IAAI9C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACjB,IAAI,EAAEiB,CAAC,EAAE,EAAE;UAClC,IAAIsD,QAAQ,GAAG,KAAK;UACpB,IAAIC,IAAI,GAAG,CAAC;UACZ,IAAIC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UACtC,KAAK,IAAIzD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAChB,IAAI,EAAEgB,CAAC,EAAE,EAAE;YAClC,IAAI,IAAI,CAACrB,OAAO,CAACsB,CAAC,CAAC,CAACD,CAAC,CAAC,IAAIuD,QAAQ,EAAE;cAClCC,IAAI,EAAE;cACN,IAAIA,IAAI,IAAI,CAAC,EACXT,MAAM,IAAIzE,OAAO,CAACoF,UAAU,CAAC,KAC1B,IAAIF,IAAI,GAAG,CAAC,EACfT,MAAM,EAAE;YACZ,CAAC,MAAM;cACL,IAAI,CAACY,uBAAuB,CAACH,IAAI,EAAEC,UAAU,CAAC;cAC9C,IAAI,CAACF,QAAQ,EACXR,MAAM,IAAI,IAAI,CAACa,0BAA0B,CAACH,UAAU,CAAC,GAAGnF,OAAO,CAACuF,UAAU;cAC5EN,QAAQ,GAAG,IAAI,CAAC5E,OAAO,CAACsB,CAAC,CAAC,CAACD,CAAC,CAAC;cAC7BwD,IAAI,GAAG,CAAC;YACV;UACF;UACAT,MAAM,IAAI,IAAI,CAACe,8BAA8B,CAACP,QAAQ,EAAEC,IAAI,EAAEC,UAAU,CAAC,GAAGnF,OAAO,CAACuF,UAAU;QAChG;QACA,KAAK,IAAI7D,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG,IAAI,CAAChB,IAAI,EAAEgB,EAAC,EAAE,EAAE;UAClC,IAAIuD,SAAQ,GAAG,KAAK;UACpB,IAAIQ,IAAI,GAAG,CAAC;UACZ,IAAIN,WAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UACtC,KAAK,IAAIxD,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG,IAAI,CAACjB,IAAI,EAAEiB,EAAC,EAAE,EAAE;YAClC,IAAI,IAAI,CAACtB,OAAO,CAACsB,EAAC,CAAC,CAACD,EAAC,CAAC,IAAIuD,SAAQ,EAAE;cAClCQ,IAAI,EAAE;cACN,IAAIA,IAAI,IAAI,CAAC,EACXhB,MAAM,IAAIzE,OAAO,CAACoF,UAAU,CAAC,KAC1B,IAAIK,IAAI,GAAG,CAAC,EACfhB,MAAM,EAAE;YACZ,CAAC,MAAM;cACL,IAAI,CAACY,uBAAuB,CAACI,IAAI,EAAEN,WAAU,CAAC;cAC9C,IAAI,CAACF,SAAQ,EACXR,MAAM,IAAI,IAAI,CAACa,0BAA0B,CAACH,WAAU,CAAC,GAAGnF,OAAO,CAACuF,UAAU;cAC5EN,SAAQ,GAAG,IAAI,CAAC5E,OAAO,CAACsB,EAAC,CAAC,CAACD,EAAC,CAAC;cAC7B+D,IAAI,GAAG,CAAC;YACV;UACF;UACAhB,MAAM,IAAI,IAAI,CAACe,8BAA8B,CAACP,SAAQ,EAAEQ,IAAI,EAAEN,WAAU,CAAC,GAAGnF,OAAO,CAACuF,UAAU;QAChG;QACA,KAAK,IAAI5D,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAACjB,IAAI,GAAG,CAAC,EAAEiB,GAAC,EAAE,EAAE;UACtC,KAAK,IAAID,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAAChB,IAAI,GAAG,CAAC,EAAEgB,GAAC,EAAE,EAAE;YACtC,IAAMgB,KAAK,GAAG,IAAI,CAACrC,OAAO,CAACsB,GAAC,CAAC,CAACD,GAAC,CAAC;YAChC,IAAIgB,KAAK,IAAI,IAAI,CAACrC,OAAO,CAACsB,GAAC,CAAC,CAACD,GAAC,GAAG,CAAC,CAAC,IAAIgB,KAAK,IAAI,IAAI,CAACrC,OAAO,CAACsB,GAAC,GAAG,CAAC,CAAC,CAACD,GAAC,CAAC,IAAIgB,KAAK,IAAI,IAAI,CAACrC,OAAO,CAACsB,GAAC,GAAG,CAAC,CAAC,CAACD,GAAC,GAAG,CAAC,CAAC,EAC3G+C,MAAM,IAAIzE,OAAO,CAAC0F,UAAU;UAChC;QACF;QACA,IAAIC,IAAI,GAAG,CAAC;QAAC,4CACK,IAAI,CAACtF,OAAO;UAAA;QAAA;UAA9B,uDACE;YAAA,IADSM,GAAG;YACZgF,IAAI,GAAGhF,GAAG,CAACiF,MAAM,CAAC,UAACC,GAAG,EAAEnD,KAAK;cAAA,OAAKmD,GAAG,IAAInD,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;YAAA,GAAEiD,IAAI,CAAC;UAAA;QAAC;UAAA;QAAA;UAAA;QAAA;QACjE,IAAMG,KAAK,GAAG,IAAI,CAACpF,IAAI,GAAG,IAAI,CAACA,IAAI;QACnC,IAAM0D,CAAC,GAAGzB,IAAI,CAACoD,IAAI,CAACpD,IAAI,CAACM,GAAG,CAAC0C,IAAI,GAAG,EAAE,GAAGG,KAAK,GAAG,EAAE,CAAC,GAAGA,KAAK,CAAC,GAAG,CAAC;QACjEtE,MAAM,CAAC,CAAC,IAAI4C,CAAC,IAAIA,CAAC,IAAI,CAAC,CAAC;QACxBK,MAAM,IAAIL,CAAC,GAAGpE,OAAO,CAACgG,UAAU;QAChCxE,MAAM,CAAC,CAAC,IAAIiD,MAAM,IAAIA,MAAM,IAAI,OAAO,CAAC;QACxC,OAAOA,MAAM;MACf;IAAC;MAAA;MAAA,OACD,wCAA+B;QAC7B,IAAI,IAAI,CAACxE,OAAO,IAAI,CAAC,EACnB,OAAO,EAAE,CAAC,KACP;UACH,IAAM+B,QAAQ,GAAGW,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC3C,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC;UACjD,IAAMgG,IAAI,GAAG,IAAI,CAAChG,OAAO,IAAI,EAAE,GAAG,EAAE,GAAG0C,IAAI,CAACoD,IAAI,CAAC,CAAC,IAAI,CAAC9F,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK+B,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;UACjG,IAAIyC,MAAM,GAAG,CAAC,CAAC,CAAC;UAChB,KAAK,IAAIyB,GAAG,GAAG,IAAI,CAACxF,IAAI,GAAG,CAAC,EAAE+D,MAAM,CAACxC,MAAM,GAAGD,QAAQ,EAAEkE,GAAG,IAAID,IAAI,EACjExB,MAAM,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,EAAED,GAAG,CAAC;UAC1B,OAAOzB,MAAM;QACf;MACF;IAAC;MAAA;MAAA,OAuDD,oCAA2BU,UAAU,EAAE;QACrC,IAAMiB,CAAC,GAAGjB,UAAU,CAAC,CAAC,CAAC;QACvB3D,MAAM,CAAC4E,CAAC,IAAI,IAAI,CAAC1F,IAAI,GAAG,CAAC,CAAC;QAC1B,IAAM2F,IAAI,GAAGD,CAAC,GAAG,CAAC,IAAIjB,UAAU,CAAC,CAAC,CAAC,IAAIiB,CAAC,IAAIjB,UAAU,CAAC,CAAC,CAAC,IAAIiB,CAAC,GAAG,CAAC,IAAIjB,UAAU,CAAC,CAAC,CAAC,IAAIiB,CAAC,IAAIjB,UAAU,CAAC,CAAC,CAAC,IAAIiB,CAAC;QAC9G,OAAO,CAACC,IAAI,IAAIlB,UAAU,CAAC,CAAC,CAAC,IAAIiB,CAAC,GAAG,CAAC,IAAIjB,UAAU,CAAC,CAAC,CAAC,IAAIiB,CAAC,GAAG,CAAC,GAAG,CAAC,KAAKC,IAAI,IAAIlB,UAAU,CAAC,CAAC,CAAC,IAAIiB,CAAC,GAAG,CAAC,IAAIjB,UAAU,CAAC,CAAC,CAAC,IAAIiB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MACxI;IAAC;MAAA;MAAA,OACD,wCAA+BE,eAAe,EAAEC,gBAAgB,EAAEpB,UAAU,EAAE;QAC5E,IAAImB,eAAe,EAAE;UACnB,IAAI,CAACjB,uBAAuB,CAACkB,gBAAgB,EAAEpB,UAAU,CAAC;UAC1DoB,gBAAgB,GAAG,CAAC;QACtB;QACAA,gBAAgB,IAAI,IAAI,CAAC7F,IAAI;QAC7B,IAAI,CAAC2E,uBAAuB,CAACkB,gBAAgB,EAAEpB,UAAU,CAAC;QAC1D,OAAO,IAAI,CAACG,0BAA0B,CAACH,UAAU,CAAC;MACpD;IAAC;MAAA;MAAA,OACD,iCAAwBoB,gBAAgB,EAAEpB,UAAU,EAAE;QACpD,IAAIA,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,EACpBoB,gBAAgB,IAAI,IAAI,CAAC7F,IAAI;QAC/ByE,UAAU,CAACqB,GAAG,EAAE;QAChBrB,UAAU,CAACsB,OAAO,CAACF,gBAAgB,CAAC;MACtC;IAAC;MAAA;MAAA,OA/WD,oBAAkBG,IAAI,EAAEpD,GAAG,EAAE;QAC3B,IAAMqD,IAAI,GAAG5G,UAAU,CAAC6G,SAAS,CAACC,YAAY,CAACH,IAAI,CAAC;QACpD,OAAO1G,OAAO,CAAC8G,cAAc,CAACH,IAAI,EAAErD,GAAG,CAAC;MAC1C;IAAC;MAAA;MAAA,OACD,sBAAoBjB,IAAI,EAAEiB,GAAG,EAAE;QAC7B,IAAMyD,GAAG,GAAGhH,UAAU,CAAC6G,SAAS,CAACI,SAAS,CAAC3E,IAAI,CAAC;QAChD,OAAOrC,OAAO,CAAC8G,cAAc,CAAC,CAACC,GAAG,CAAC,EAAEzD,GAAG,CAAC;MAC3C;IAAC;MAAA;MAAA,OACD,wBAAsBqD,IAAI,EAAErD,GAAG,EAA+D;QAAA,IAA7D2D,UAAU,uEAAG,CAAC;QAAA,IAAEC,UAAU,uEAAG,EAAE;QAAA,IAAEzF,IAAI,uEAAG,CAAC,CAAC;QAAA,IAAE0F,QAAQ,uEAAG,IAAI;QAC1F,IAAI,EAAEnH,OAAO,CAACO,WAAW,IAAI0G,UAAU,IAAIA,UAAU,IAAIC,UAAU,IAAIA,UAAU,IAAIlH,OAAO,CAACQ,WAAW,CAAC,IAAIiB,IAAI,GAAG,CAAC,CAAC,IAAIA,IAAI,GAAG,CAAC,EAChI,MAAM,IAAIhB,UAAU,CAAC,eAAe,CAAC;QACvC,IAAIR,OAAO;QACX,IAAImH,YAAY;QAChB,KAAKnH,OAAO,GAAGgH,UAAU,GAAIhH,OAAO,EAAE,EAAE;UACtC,IAAMoH,iBAAiB,GAAGrH,OAAO,CAACuD,mBAAmB,CAACtD,OAAO,EAAEqD,GAAG,CAAC,GAAG,CAAC;UACvE,IAAMgE,QAAQ,GAAGV,SAAS,CAACW,YAAY,CAACZ,IAAI,EAAE1G,OAAO,CAAC;UACtD,IAAIqH,QAAQ,IAAID,iBAAiB,EAAE;YACjCD,YAAY,GAAGE,QAAQ;YACvB;UACF;UACA,IAAIrH,OAAO,IAAIiH,UAAU,EACvB,MAAM,IAAIzG,UAAU,CAAC,eAAe,CAAC;QACzC;QACA,0BAAqB,CAACT,OAAO,CAACwH,GAAG,CAACC,MAAM,EAAEzH,OAAO,CAACwH,GAAG,CAACE,QAAQ,EAAE1H,OAAO,CAACwH,GAAG,CAACG,IAAI,CAAC,8BAAE;UAA9E,IAAMC,MAAM;UACf,IAAIT,QAAQ,IAAIC,YAAY,IAAIpH,OAAO,CAACuD,mBAAmB,CAACtD,OAAO,EAAE2H,MAAM,CAAC,GAAG,CAAC,EAC9EtE,GAAG,GAAGsE,MAAM;QAChB;QACA,IAAIC,EAAE,GAAG,EAAE;QAAC,4CACMlB,IAAI;UAAA;QAAA;UAAtB,uDAAwB;YAAA,IAAbI,GAAG;YACZe,UAAU,CAACf,GAAG,CAACgB,IAAI,CAACC,QAAQ,EAAE,CAAC,EAAEH,EAAE,CAAC;YACpCC,UAAU,CAACf,GAAG,CAACkB,QAAQ,EAAElB,GAAG,CAACgB,IAAI,CAACG,gBAAgB,CAACjI,OAAO,CAAC,EAAE4H,EAAE,CAAC;YAAC,4CACjDd,GAAG,CAACoB,OAAO,EAAE;cAAA;YAAA;cAA7B,uDACE;gBAAA,IADSjJ,CAAC;gBACV2I,EAAE,CAAChH,IAAI,CAAC3B,CAAC,CAAC;cAAA;YAAC;cAAA;YAAA;cAAA;YAAA;UACf;QAAC;UAAA;QAAA;UAAA;QAAA;QACDsC,MAAM,CAACqG,EAAE,CAAC5F,MAAM,IAAImF,YAAY,CAAC;QACjC,IAAMgB,gBAAgB,GAAGpI,OAAO,CAACuD,mBAAmB,CAACtD,OAAO,EAAEqD,GAAG,CAAC,GAAG,CAAC;QACtE9B,MAAM,CAACqG,EAAE,CAAC5F,MAAM,IAAImG,gBAAgB,CAAC;QACrCN,UAAU,CAAC,CAAC,EAAEnF,IAAI,CAAC0F,GAAG,CAAC,CAAC,EAAED,gBAAgB,GAAGP,EAAE,CAAC5F,MAAM,CAAC,EAAE4F,EAAE,CAAC;QAC5DC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGD,EAAE,CAAC5F,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE4F,EAAE,CAAC;QAC1CrG,MAAM,CAACqG,EAAE,CAAC5F,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC;QAC1B,KAAK,IAAIqG,OAAO,GAAG,GAAG,EAAET,EAAE,CAAC5F,MAAM,GAAGmG,gBAAgB,EAAEE,OAAO,IAAI,GAAG,GAAG,EAAE,EACvER,UAAU,CAACQ,OAAO,EAAE,CAAC,EAAET,EAAE,CAAC;QAC5B,IAAI1H,aAAa,GAAG,EAAE;QACtB,OAAOA,aAAa,CAAC8B,MAAM,GAAG,CAAC,GAAG4F,EAAE,CAAC5F,MAAM,EACzC9B,aAAa,CAACU,IAAI,CAAC,CAAC,CAAC;QACvBgH,EAAE,CAACnD,OAAO,CAAC,UAACxF,CAAC,EAAE0B,CAAC;UAAA,OAAKT,aAAa,CAACS,CAAC,KAAK,CAAC,CAAC,IAAI1B,CAAC,IAAI,CAAC,IAAI0B,CAAC,GAAG,CAAC,CAAC;QAAA,EAAC;QAChE,OAAO,IAAIZ,OAAO,CAACC,OAAO,EAAEqD,GAAG,EAAEnD,aAAa,EAAEsB,IAAI,CAAC;MACvD;IAAC;MAAA;MAAA,OAsPD,8BAA4B4B,GAAG,EAAE;QAC/B,IAAIA,GAAG,GAAGrD,OAAO,CAACO,WAAW,IAAI8C,GAAG,GAAGrD,OAAO,CAACQ,WAAW,EACxD,MAAM,IAAIC,UAAU,CAAC,6BAA6B,CAAC;QACrD,IAAIgE,MAAM,GAAG,CAAC,EAAE,GAAGpB,GAAG,GAAG,GAAG,IAAIA,GAAG,GAAG,EAAE;QACxC,IAAIA,GAAG,IAAI,CAAC,EAAE;UACZ,IAAMrB,QAAQ,GAAGW,IAAI,CAACC,KAAK,CAACS,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;UACxCoB,MAAM,IAAI,CAAC,EAAE,GAAGzC,QAAQ,GAAG,EAAE,IAAIA,QAAQ,GAAG,EAAE;UAC9C,IAAIqB,GAAG,IAAI,CAAC,EACVoB,MAAM,IAAI,EAAE;QAChB;QACAjD,MAAM,CAAC,GAAG,IAAIiD,MAAM,IAAIA,MAAM,IAAI,KAAK,CAAC;QACxC,OAAOA,MAAM;MACf;IAAC;MAAA;MAAA,OACD,6BAA2BpB,GAAG,EAAEC,GAAG,EAAE;QACnC,OAAOX,IAAI,CAACC,KAAK,CAAC5C,OAAO,CAAC8D,oBAAoB,CAACT,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGrD,OAAO,CAAC4D,uBAAuB,CAACN,GAAG,CAACI,OAAO,CAAC,CAACL,GAAG,CAAC,GAAGrD,OAAO,CAACyD,2BAA2B,CAACH,GAAG,CAACI,OAAO,CAAC,CAACL,GAAG,CAAC;MACtK;IAAC;MAAA;MAAA,OACD,mCAAiCkF,MAAM,EAAE;QACvC,IAAIA,MAAM,GAAG,CAAC,IAAIA,MAAM,GAAG,GAAG,EAC5B,MAAM,IAAI9H,UAAU,CAAC,qBAAqB,CAAC;QAC7C,IAAIgE,MAAM,GAAG,EAAE;QACf,KAAK,IAAI7D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2H,MAAM,GAAG,CAAC,EAAE3H,CAAC,EAAE,EACjC6D,MAAM,CAAC5D,IAAI,CAAC,CAAC,CAAC;QAChB4D,MAAM,CAAC5D,IAAI,CAAC,CAAC,CAAC;QACd,IAAI2H,IAAI,GAAG,CAAC;QACZ,KAAK,IAAI5H,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG2H,MAAM,EAAE3H,IAAC,EAAE,EAAE;UAC/B,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuC,MAAM,CAACxC,MAAM,EAAEC,CAAC,EAAE,EAAE;YACtCuC,MAAM,CAACvC,CAAC,CAAC,GAAGlC,OAAO,CAACyI,mBAAmB,CAAChE,MAAM,CAACvC,CAAC,CAAC,EAAEsG,IAAI,CAAC;YACxD,IAAItG,CAAC,GAAG,CAAC,GAAGuC,MAAM,CAACxC,MAAM,EACvBwC,MAAM,CAACvC,CAAC,CAAC,IAAIuC,MAAM,CAACvC,CAAC,GAAG,CAAC,CAAC;UAC9B;UACAsG,IAAI,GAAGxI,OAAO,CAACyI,mBAAmB,CAACD,IAAI,EAAE,CAAC,CAAC;QAC7C;QACA,OAAO/D,MAAM;MACf;IAAC;MAAA;MAAA,OACD,qCAAmCpC,IAAI,EAAEqG,OAAO,EAAE;QAChD,IAAIjE,MAAM,GAAGiE,OAAO,CAACC,GAAG,CAAC,UAACC,CAAC;UAAA,OAAK,CAAC;QAAA,EAAC;QAAC,4CACnBvG,IAAI;UAAA;QAAA;UAAA,+BAAE;YAAA,IAAXnD,CAAC;YACV,IAAM2J,MAAM,GAAG3J,CAAC,GAAGuF,MAAM,CAACqE,KAAK,EAAE;YACjCrE,MAAM,CAAC5D,IAAI,CAAC,CAAC,CAAC;YACd6H,OAAO,CAAChE,OAAO,CAAC,UAACqE,IAAI,EAAEnI,CAAC;cAAA,OAAK6D,MAAM,CAAC7D,CAAC,CAAC,IAAIZ,OAAO,CAACyI,mBAAmB,CAACM,IAAI,EAAEF,MAAM,CAAC;YAAA,EAAC;UACtF,CAAC;UAJD;YAAA;UAAA;QAIC;UAAA;QAAA;UAAA;QAAA;QACD,OAAOpE,MAAM;MACf;IAAC;MAAA;MAAA,OACD,6BAA2B/C,CAAC,EAAEC,CAAC,EAAE;QAC/B,IAAID,CAAC,KAAK,CAAC,IAAI,CAAC,IAAIC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC9B,MAAM,IAAIlB,UAAU,CAAC,mBAAmB,CAAC;QAC3C,IAAIuI,CAAC,GAAG,CAAC;QACT,KAAK,IAAIpI,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC3BoI,CAAC,GAAGA,CAAC,IAAI,CAAC,GAAG,CAACA,CAAC,KAAK,CAAC,IAAI,GAAG;UAC5BA,CAAC,IAAI,CAACrH,CAAC,KAAKf,CAAC,GAAG,CAAC,IAAIc,CAAC;QACxB;QACAF,MAAM,CAACwH,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACpB,OAAOA,CAAC;MACV;IAAC;IAAA;EAAA,GAsBF;EACD,IAAIC,MAAM,GAAGjJ,OAAO;EACpBiJ,MAAM,CAAC1I,WAAW,GAAG,CAAC;EACtB0I,MAAM,CAACzI,WAAW,GAAG,EAAE;EACvByI,MAAM,CAAC7D,UAAU,GAAG,CAAC;EACrB6D,MAAM,CAACvD,UAAU,GAAG,CAAC;EACrBuD,MAAM,CAAC1D,UAAU,GAAG,EAAE;EACtB0D,MAAM,CAACjD,UAAU,GAAG,EAAE;EACtBiD,MAAM,CAACrF,uBAAuB,GAAG,CAC/B,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACnK,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACpK,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}