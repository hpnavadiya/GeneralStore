{"ast":null,"code":"import _slicedToArray from \"D:/Projects/React/Portfolio/GeneralStore/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// Countdown\nvar timeUnits = [['Y', 1000 * 60 * 60 * 24 * 365], ['M', 1000 * 60 * 60 * 24 * 30], ['D', 1000 * 60 * 60 * 24], ['H', 1000 * 60 * 60], ['m', 1000 * 60], ['s', 1000], ['S', 1] // million seconds\n];\n\nexport function formatTimeStr(duration, format) {\n  var leftDuration = duration;\n  var escapeRegex = /\\[[^\\]]*]/g;\n  var keepList = (format.match(escapeRegex) || []).map(function (str) {\n    return str.slice(1, -1);\n  });\n  var templateText = format.replace(escapeRegex, '[]');\n  var replacedText = timeUnits.reduce(function (current, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      name = _ref2[0],\n      unit = _ref2[1];\n    if (current.includes(name)) {\n      var value = Math.floor(leftDuration / unit);\n      leftDuration -= value * unit;\n      return current.replace(new RegExp(\"\".concat(name, \"+\"), 'g'), function (match) {\n        var len = match.length;\n        return value.toString().padStart(len, '0');\n      });\n    }\n    return current;\n  }, templateText);\n  var index = 0;\n  return replacedText.replace(escapeRegex, function () {\n    var match = keepList[index];\n    index += 1;\n    return match;\n  });\n}\nexport function formatCountdown(value, config) {\n  var _config$format = config.format,\n    format = _config$format === void 0 ? '' : _config$format;\n  var target = new Date(value).getTime();\n  var current = Date.now();\n  var diff = Math.max(target - current, 0);\n  return formatTimeStr(diff, format);\n}","map":{"version":3,"names":["timeUnits","formatTimeStr","duration","format","leftDuration","escapeRegex","keepList","match","map","str","slice","templateText","replace","replacedText","reduce","current","_ref","name","unit","includes","value","Math","floor","RegExp","len","length","toString","padStart","index","formatCountdown","config","target","Date","getTime","now","diff","max"],"sources":["D:/Projects/React/Portfolio/GeneralStore/client/node_modules/antd/es/statistic/utils.js"],"sourcesContent":["// Countdown\nconst timeUnits = [['Y', 1000 * 60 * 60 * 24 * 365], ['M', 1000 * 60 * 60 * 24 * 30], ['D', 1000 * 60 * 60 * 24], ['H', 1000 * 60 * 60], ['m', 1000 * 60], ['s', 1000], ['S', 1] // million seconds\n];\n\nexport function formatTimeStr(duration, format) {\n  let leftDuration = duration;\n  const escapeRegex = /\\[[^\\]]*]/g;\n  const keepList = (format.match(escapeRegex) || []).map(str => str.slice(1, -1));\n  const templateText = format.replace(escapeRegex, '[]');\n  const replacedText = timeUnits.reduce((current, _ref) => {\n    let [name, unit] = _ref;\n    if (current.includes(name)) {\n      const value = Math.floor(leftDuration / unit);\n      leftDuration -= value * unit;\n      return current.replace(new RegExp(`${name}+`, 'g'), match => {\n        const len = match.length;\n        return value.toString().padStart(len, '0');\n      });\n    }\n    return current;\n  }, templateText);\n  let index = 0;\n  return replacedText.replace(escapeRegex, () => {\n    const match = keepList[index];\n    index += 1;\n    return match;\n  });\n}\nexport function formatCountdown(value, config) {\n  const {\n    format = ''\n  } = config;\n  const target = new Date(value).getTime();\n  const current = Date.now();\n  const diff = Math.max(target - current, 0);\n  return formatTimeStr(diff, format);\n}"],"mappings":";AAAA;AACA,IAAMA,SAAS,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAAA,CAChL;;AAED,OAAO,SAASC,aAAa,CAACC,QAAQ,EAAEC,MAAM,EAAE;EAC9C,IAAIC,YAAY,GAAGF,QAAQ;EAC3B,IAAMG,WAAW,GAAG,YAAY;EAChC,IAAMC,QAAQ,GAAG,CAACH,MAAM,CAACI,KAAK,CAACF,WAAW,CAAC,IAAI,EAAE,EAAEG,GAAG,CAAC,UAAAC,GAAG;IAAA,OAAIA,GAAG,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAAA,EAAC;EAC/E,IAAMC,YAAY,GAAGR,MAAM,CAACS,OAAO,CAACP,WAAW,EAAE,IAAI,CAAC;EACtD,IAAMQ,YAAY,GAAGb,SAAS,CAACc,MAAM,CAAC,UAACC,OAAO,EAAEC,IAAI,EAAK;IACvD,2BAAmBA,IAAI;MAAlBC,IAAI;MAAEC,IAAI;IACf,IAAIH,OAAO,CAACI,QAAQ,CAACF,IAAI,CAAC,EAAE;MAC1B,IAAMG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAAClB,YAAY,GAAGc,IAAI,CAAC;MAC7Cd,YAAY,IAAIgB,KAAK,GAAGF,IAAI;MAC5B,OAAOH,OAAO,CAACH,OAAO,CAAC,IAAIW,MAAM,WAAIN,IAAI,QAAK,GAAG,CAAC,EAAE,UAAAV,KAAK,EAAI;QAC3D,IAAMiB,GAAG,GAAGjB,KAAK,CAACkB,MAAM;QACxB,OAAOL,KAAK,CAACM,QAAQ,EAAE,CAACC,QAAQ,CAACH,GAAG,EAAE,GAAG,CAAC;MAC5C,CAAC,CAAC;IACJ;IACA,OAAOT,OAAO;EAChB,CAAC,EAAEJ,YAAY,CAAC;EAChB,IAAIiB,KAAK,GAAG,CAAC;EACb,OAAOf,YAAY,CAACD,OAAO,CAACP,WAAW,EAAE,YAAM;IAC7C,IAAME,KAAK,GAAGD,QAAQ,CAACsB,KAAK,CAAC;IAC7BA,KAAK,IAAI,CAAC;IACV,OAAOrB,KAAK;EACd,CAAC,CAAC;AACJ;AACA,OAAO,SAASsB,eAAe,CAACT,KAAK,EAAEU,MAAM,EAAE;EAC7C,qBAEIA,MAAM,CADR3B,MAAM;IAANA,MAAM,+BAAG,EAAE;EAEb,IAAM4B,MAAM,GAAG,IAAIC,IAAI,CAACZ,KAAK,CAAC,CAACa,OAAO,EAAE;EACxC,IAAMlB,OAAO,GAAGiB,IAAI,CAACE,GAAG,EAAE;EAC1B,IAAMC,IAAI,GAAGd,IAAI,CAACe,GAAG,CAACL,MAAM,GAAGhB,OAAO,EAAE,CAAC,CAAC;EAC1C,OAAOd,aAAa,CAACkC,IAAI,EAAEhC,MAAM,CAAC;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}